cloudflare_email: ENC[AES256_GCM,data:iJN+YKZ3hC00NjuCFbD0cABvG2NNhkPfOg==,iv:fQB+2dHQH7uE5c9086p97V3UTvexA0L99lixrP6Wkis=,tag:NRPRQTZPg/AGmkFudwEe5A==,type:str]
cloudflare_api_token: ENC[AES256_GCM,data:ut3pmFE7j1GXkHpau+FuyOSh5lRru+CGfqTNOmja4my5YO9x8R1+3g==,iv:zlzwoJSjruCVKrubLcMAan38efmRJkfXrs9hJfeIhG4=,tag:qS674fOOLq2VdVthnLVbTQ==,type:str]
cloudflare_domain: ENC[AES256_GCM,data:Ej9oDNhKgw==,iv:t18ZaXzGFvZpNRYP1ubC9siCv3hMM2kn35DCNiOkKfg=,tag:0oa2o25teikaj5xEFNKGSA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBoWmlKaGNtLzNIZTQra2tw
        MmQvVWVLak8wOHZKYmlTdEZIemhmNXBSS2xnCmxKWEFzdE84elFGMW11Q0VRa2hG
        L2Z3M3ZSVmh1SkxkUjFGVERXVTlxWlUKLS0tIDM2djdoY054cWpad2t6K2VBaG4y
        OTNKM2E1b0xxY2lJTW8yMlYvMTdZQjAKNcOdwu31xZ8IF2iLghhfeWxBi8bFRebh
        9O/VY4/0dPTf0e5LtXVXxoqU9cX8VgXv6Bj18WIUZpxL6B+siNW2TA==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:11:36Z"
  mac: ENC[AES256_GCM,data:KuLlwHdYHFHEdRsOETfITuyFSfBa8m+zUCdETzErw4TrZH/TsctvBosE5wc1f7Mf1ma2lAh3rQieu3t1DZ6qgxHPz568HKveilWcquAARoaDD+xmtBjtK6depVw12Ml+32utqx7kvf3CTSJ2vDopeAXPzhqUeaJKsgNDVsvwVHQ=,iv:j/jW+n/pmSPfyEkb8v67PzPF6/mn3ZwNh0zCiCFAsvg=,tag:1dxjNoF9Mm+G+dSQU0asuA==,type:str]
  pgp: []
  unencrypted_suffix: _unencrypted
  version: 3.7.3
---
cloudflare_email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
cloudflare_api_token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
cloudflare_domain: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
---
creation_rules:
  - path_regex: kubernetes/.*\.sops\.ya?ml
    encrypted_regex: "^(data|stringData)$"
    key_groups:
      - age:
          - ${BOOTSTRAP_AGE_PUBLIC_KEY}
  - path_regex: ansible/.*\.sops\.ya?ml
    key_groups:
      - age:
          - ${BOOTSTRAP_AGE_PUBLIC_KEY}
  - path_regex: terraform/.*\.sops\.ya?ml
    key_groups:
      - age:
          - ${BOOTSTRAP_AGE_PUBLIC_KEY}
---
apiVersion: v1
kind: Secret
metadata:
  name: external-dns-secret
  namespace: networking
stringData:
  email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
  api-token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-settings
  namespace: flux-system
data:
  TIMEZONE: "${BOOTSTRAP_TIMEZONE}"
  KUBE_VIP_ADDR: "${BOOTSTRAP_KUBE_VIP_ADDR}"
  METALLB_LB_RANGE: "${BOOTSTRAP_METALLB_LB_RANGE}"
  METALLB_K8S_GATEWAY_ADDR: "${BOOTSTRAP_METALLB_K8S_GATEWAY_ADDR}"
  METALLB_INGRESS_ADDR: "${BOOTSTRAP_METALLB_INGRESS_ADDR}"
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: GitRepository
metadata:
  name: home-kubernetes
  namespace: flux-system
spec:
  interval: 30m
  ref:
    branch: main
  url: "${BOOTSTRAP_GIT_REPOSITORY}"
  ignore: |
    # exclude all
    /*
    # include kubernetes directory
    !/kubernetes
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster
  namespace: flux-system
spec:
  interval: 30m
  path: ./kubernetes/flux
  prune: true
  wait: false
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  decryption:
    provider: sops
    secretRef:
      name: sops-age
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
      - kind: Secret
        name: cluster-secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-secrets
  namespace: flux-system
stringData:
  SECRET_DOMAIN: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
  SECRET_CLOUDFLARE_EMAIL: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
---
apiVersion: v1
kind: Secret
metadata:
  name: github-webhook-token-secret
  namespace: flux-system
stringData:
  token: "${BOOTSTRAP_FLUX_GITHUB_WEBHOOK_SECRET}"
---
apiVersion: v1
kind: Secret
metadata:
  name: cert-manager-secret
  namespace: cert-manager
stringData:
  api-token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
---
apiVersion: v1
kind: Secret
metadata:
  name: weave-gitops-secret
  namespace: flux-system
type: Opaque
stringData:
  adminPassword: "${BOOTSTRAP_WEAVE_GITOPS_ADMIN_PASSWORD}"
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-ddns-secret
  namespace: networking
type: Opaque
stringData:
  CLOUDFLARE_EMAIL: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
  CLOUDFLARE_API_TOKEN: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
  CLOUDFLARE_RECORD_NAME: "ipv4.${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
---
# DO NOT MODIFY
# This file was generated by pre-commit-hooks.nix
{"default_stages": ["commit"], "exclude": "(.devenv.flake.nix)", "repos": [{"hooks": [{"always_run": false, "entry": "/nix/store/d55nhl98qr72p735s9p4cgaxim9x30bw-alejandra-3.0.0/bin/alejandra ", "exclude": "^$", "files": "\\.nix$", "id": "alejandra", "language": "system", "name": "alejandra", "pass_filenames": true, "stages": ["commit"], "types": ["file"], "types_or": [], "verbose": false}, {"always_run": false, "entry": "/nix/store/zvi1f3n3f71pqd9byk4jlg9dbj23g2vj-terraform-fmt/bin/terraform-fmt", "exclude": "^$", "files": "\\.tf$", "id": "terraform-format", "language": "system", "name": "terraform-format", "pass_filenames": true, "stages": ["commit"], "types": ["file"], "types_or": [], "verbose": false}, {"always_run": false, "entry": "/nix/store/q3z9vs48wghmvl7mrbxi5ir5pcifl6df-python3.10-yamllint-1.32.0/bin/yamllint ", "exclude": "^$", "files": "", "id": "yamllint", "language": "system", "name": "yamllint", "pass_filenames": true, "stages": ["commit"], "types": ["file", "yaml"], "types_or": [], "verbose": false}], "repo": "local"}]}
---
inputs:
  nixpkgs:
    url: github:NixOS/nixpkgs/nixpkgs-unstable
---
ignore: |
  *.sops.*
extends: default
rules:
  truthy:
    allowed-values: ["true", "false", "on"]
  comments:
    min-spaces-from-content: 1
  line-length: disable
  braces:
    min-spaces-inside: 0
    max-spaces-inside: 1
  brackets:
    min-spaces-inside: 0
    max-spaces-inside: 0
  indentation: enable
---
# Area
- name: area/ansible
  color: "72ccf3"
  description: >-
    Changes made in the ansible directory
- name: area/github
  color: "72ccf3"
  description: >-
    Changes made in the github directory
- name: area/kubernetes
  color: "72ccf3"
  description: >-
    Changes made in the kubernetes directory
- name: area/template
  color: "72ccf3"
  description: >-
    Changes made in the tmpl directory
- name: area/terraform
  color: "72ccf3"
  description: >-
    Changes made in the terraform directory
# Renovate
- name: renovate/ansible
  color: "ffc300"
- name: renovate/container
  color: "ffc300"
- name: renovate/github-action
  color: "ffc300"
- name: renovate/github-release
  color: "ffc300"
- name: renovate/helm
  color: "ffc300"
- name: renovate/terraform
  color: "ffc300"
# Semantic Type
- name: type/patch
  color: "FFEC19"
- name: type/minor
  color: "FF9800"
- name: type/major
  color: "F6412D"
- name: type/break
  color: "F6412D"
# Uncategorized
- name: bug
  color: "ee0701"
- name: do-not-merge
  color: "ee0701"
- name: docs
  color: "F4D1B7"
- name: enhancement
  color: "84b6eb"
- name: broken-links
  color: "7B55D7"
- name: question
  color: "cc317c"
- name: community
  color: "0e8a16"
---
area/ansible:
  - "ansible/**/*"
area/github:
  - ".github/**/*"
area/kubernetes:
  - "kubernetes/**/*"
area/terraform:
  - "terraform/**/*"
area/templates:
  - "tmpl/**/*"
---
name: "Release"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Publish Latest Release
        uses: ivangabriele/publish-latest-release@df1a4afd8aea9d1f0ba5ebeb89452aeac7bca0a9 # renovate: tag=v3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
---
name: "Meta Labeler"
on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]
jobs:
  labeler:
    name: Labeler
    runs-on: ubuntu-latest
    steps:
      - name: Labeler
        uses: actions/labeler@5c7539237e04b714afd8ad9b4aed733815b9fab4 # renovate: tag=v4.0.2
        with:
          configuration-path: .github/labeler.yaml
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
---
name: "Meta Sync labels"
on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths: [".github/labels.yaml"]
jobs:
  labels:
    name: Sync Labels
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Sync Labels
        uses: EndBug/label-sync@da00f2c11fdb78e4fae44adac2fdd713778ea3e8 # renovate: tag=v2.3.2
        with:
          config-file: .github/labels.yaml
          token: "${{ secrets.GITHUB_TOKEN }}"
          delete-other-labels: true
---
name: "Draft Release"
on:
  workflow_dispatch:
  push:
    branches: ["main"]
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@cfc5540ebc9d65a8731f02032e3d44db5e449fb6 # v5.22.0
        with:
          config-name: release-drafter.yaml
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
---
name: "Link Check"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
jobs:
  link-check:
    name: Link Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Link Checker
        uses: lycheeverse/lychee-action@4dcb8bee2a0a4531cba1a1f392c54e8375d6dd81 # renovate: tag=v1.5.4
        id: lychee
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Find Link Checker Issue
        id: link-checker-issue
        uses: micalevisk/last-issue-action@044e1cb7e9a4dde20e22969cb67818bfca0797be # renovate: tag=2.0.0
        with:
          state: open
          labels: |
            broken-links
      - name: Update Issue
        uses: peter-evans/create-issue-from-file@433e51abf769039ee20ba1293a088ca19d573b7f # renovate: tag=v4.0.1
        with:
          title: "Broken links detected \U0001F517"
          issue-number: "${{ steps.link-checker-issue.outputs.issue-number }}"
          content-filepath: ./lychee/out.md
          token: "${{ secrets.GITHUB_TOKEN }}"
          labels: |
            broken-links
---
name-template: "Release v$RESOLVED_VERSION"
tag-template: "v$RESOLVED_VERSION"
change-template: "- $TITLE @$AUTHOR (#$NUMBER)"
change-title-escapes: '\<*_&'
categories:
  - title: "Community Contributions"
    labels: ["community"]
  - title: "Kubernetes"
    labels: ["area/kubernetes"]
  - title: "Github"
    labels: ["area/github"]
  - title: "Ansible"
    labels: ["area/ansible"]
  - title: "Terraform"
    labels: ["area/terraform"]
  - title: "Maintenance"
    labels: ["docs"]
version-resolver:
  major:
    labels: ["type/break"]
  minor:
    labels: ["type/major", "type/minor"]
  patch:
    labels: ["type/patch"]
  default: patch
template: |
  ## What's Changed

  $CHANGES

  **Full Changelog**: https://github.com/$OWNER/$REPOSITORY/compare/$PREVIOUS_TAG...v$RESOLVED_VERSION
---
creation_rules:
  - path_regex: kubernetes/.*\.sops\.ya?ml
    encrypted_regex: "^(data|stringData)$"
    key_groups:
      - age:
          - age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
  - path_regex: ansible/.*\.sops\.ya?ml
    key_groups:
      - age:
          - age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
  - path_regex: terraform/.*\.sops\.ya?ml
    key_groups:
      - age:
          - age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - github.com/fluxcd/flux2/manifests/install?ref=v0.39.0
patches:
  - patch: |-
      $patch: delete
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: not-used
    target:
      group: networking.k8s.io
      version: v1
      kind: NetworkPolicy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-settings
  namespace: flux-system
data:
  TIMEZONE: "America/Denver"
  KUBE_VIP_ADDR: "10.69.1.254"
  METALLB_LB_RANGE: "10.69.1.220-10.69.1.230"
  METALLB_K8S_GATEWAY_ADDR: "10.69.1.220"
  METALLB_INGRESS_ADDR: "10.69.1.221"
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./cluster-settings.yaml
  - ./cluster-secrets.sops.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-secrets
  namespace: flux-system
stringData:
  SECRET_DOMAIN: ENC[AES256_GCM,data:jDnvMz3hUw==,iv:Z7P2jT7UVfNW5RYdv3Ns4z2tTq8m3f50Mu/aaa8oo4I=,tag:2ssaP8mltOZoPTBeExBNjw==,type:str]
  SECRET_CLOUDFLARE_EMAIL: ENC[AES256_GCM,data:kk3WwTA7lcx37RjTNzpHwUArSKtXp6WsjQ==,iv:eH2zqJ/87BFrDW3DboVhpYkIm5/mkOMMYtp6dknAMP0=,tag:y9zhmgeVhJruICjZIyPa3A==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB4QkY5YXE1RFVzQVNDeEFP
        RXZ3aE5ud3RkWFlHbDdZN3R2dFhnNHBHVzNnCjlvbzdsdGJWZ0hydVBXb1J1SGxy
        dEhQaitDc0lIVTdpbnc2bnp0L1JBR2cKLS0tIEhqaFlVTjdpM0xnNWR4STBFRDB6
        MFUzNjYxNG1YcjJ1VFgwbjVrRHYyNXMKS4lavl4Az6A8BzMum5EMFBlJY+GKYo2s
        UIMf9IZ3PCY/0p7Rs5CFeKNPkOxWuSaEHPeOIF7k4GjUneD6fP5kOA==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:11:36Z"
  mac: ENC[AES256_GCM,data:x2Oa3S8I90TnAyNaKnW1GVqUeukGfn75gL4fM7A+1XBG1sDfb40rxEV6XQMI+SNuCAf2tiCLOGTFjSBHaWE1o57YmJvRZmSgJQCm5Lg2nFo7438Er+gYdJo3lVqbMUT+Vid9nmz9phc6OyifdHPgDBkgvbPhvQ4JuHUPfE8d1Yo=,iv:1X83kSYEgupLxdydo6qEIJq1hMmIGhzpuk3HZIAgdgw=,tag:5/Fzzq/JLKbnS9ztTtWjSw==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: flux-manifests
  namespace: flux-system
spec:
  interval: 10m
  url: oci://ghcr.io/fluxcd/flux-manifests
  ref:
    tag: v0.39.0
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: flux
  namespace: flux-system
spec:
  interval: 10m
  path: ./
  prune: true
  wait: true
  sourceRef:
    kind: OCIRepository
    name: flux-manifests
  patches:
    - patch: |
        $patch: delete
        apiVersion: networking.k8s.io/v1
        kind: NetworkPolicy
        metadata:
          name: not-used
      target:
        group: networking.k8s.io
        version: v1
        kind: NetworkPolicy
    - patch: |
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --concurrent=8
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --kube-api-qps=500
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --kube-api-burst=1000
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --requeue-dependency=5s
      target:
        kind: Deployment
        name: "(kustomize-controller|helm-controller|source-controller)"
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./flux.yaml
  - ./cluster.yaml
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: GitRepository
metadata:
  name: home-kubernetes
  namespace: flux-system
spec:
  interval: 30m
  ref:
    branch: main
  url: "https://github.com/teekennedy/k8s-homelab"
  ignore: |
    # exclude all
    /*
    # include kubernetes directory
    !/kubernetes
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster
  namespace: flux-system
spec:
  interval: 30m
  path: ./kubernetes/flux
  prune: true
  wait: false
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  decryption:
    provider: sops
    secretRef:
      name: sops-age
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
      - kind: Secret
        name: cluster-secrets
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./git
  - ./helm
  # - ./oci
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: k8s-gateway
  namespace: flux-system
spec:
  interval: 1h
  url: https://ori-edge.github.io/k8s_gateway/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes.github.io/ingress-nginx
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./bitnami.yaml
  - ./bjw-s.yaml
  - ./external-dns.yaml
  - ./hajimari.yaml
  - ./ingress-nginx.yaml
  - ./jetstack.yaml
  - ./k8s-gateway.yaml
  - ./kubernetes-dashboard.yaml
  - ./metallb.yaml
  - ./metrics-server.yaml
  - ./stakater.yaml
  - ./weave-gitops.yaml
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: weave-gitops
  namespace: flux-system
spec:
  interval: 1h
  url: https://helm.gitops.weave.works
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: metallb
  namespace: flux-system
spec:
  interval: 1h
  url: https://metallb.github.io/metallb
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bitnami
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.bitnami.com/bitnami
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: stakater
  namespace: flux-system
spec:
  interval: 1h
  url: https://stakater.github.io/stakater-charts
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bjw-s
  namespace: flux-system
spec:
  interval: 1h
  url: https://bjw-s.github.io/helm-charts/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: jetstack
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.jetstack.io/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: hajimari
  namespace: flux-system
spec:
  interval: 1h
  url: https://hajimari.io
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: kubernetes-dashboard
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes.github.io/dashboard/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: metrics-server
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes-sigs.github.io/metrics-server
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: external-dns
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes-sigs.github.io/external-dns
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./local-path-provisioner.yaml
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: GitRepository
metadata:
  name: local-path-provisioner
  namespace: flux-system
spec:
  interval: 30m
  url: https://github.com/rancher/local-path-provisioner
  ref:
    tag: v0.0.23
  ignore: |
    # exclude all
    /*
    # include kubernetes directory
    !/deploy/chart/local-path-provisioner
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps
  namespace: flux-system
spec:
  interval: 30m
  path: ./kubernetes/apps
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  decryption:
    provider: sops
    secretRef:
      name: sops-age
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
      - kind: Secret
        name: cluster-secrets
  patches:
    - patch: |-
        apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
        kind: Kustomization
        metadata:
          name: not-used
        spec:
          decryption:
            provider: sops
            secretRef:
              name: sops-age
          postBuild:
            substituteFrom:
              - kind: ConfigMap
                name: cluster-settings
              - kind: Secret
                name: cluster-secrets
      target:
        group: kustomize.toolkit.fluxcd.io
        version: v1beta2
        kind: Kustomization
        labelSelector: substitution.flux.home.arpa/disabled notin (true)
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-weave-gitops
  namespace: flux-system
spec:
  path: ./kubernetes/apps/flux-system/weave-gitops/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: weave-gitops
      namespace: flux-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: flux-system
resources:
  - ./secret.sops.yaml
  - ./helmrelease.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: weave-gitops-secret
  namespace: flux-system
type: Opaque
stringData:
  adminPassword: ENC[AES256_GCM,data:/Hpagy80YkTb62ALc3zq43JfnosbLJUepLEACMY3s1KrUH1acc+izsdyFnxPMmLTRQbv1Y+bbN5aESMD,iv:ujNySTp7DWGCr6hOsKtzWV7a6S5q3us8ffQHnAelkRk=,tag:TZVcq1yItK/u/3cYwNSEFA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAvUXhoS005Z3pxVDZkOTJo
        bkZ6UFJJdnZHZ0JLVzBGdllRZzY2TlprcUJnCng0RmR3bFkrMSthTWU5KytSRVRv
        aVB6ZkZoaWdZMHJjMmliWTVzZ2ZZYTAKLS0tIE5rMm1rTmtvQ05UTVVRTHg1ZEM0
        NEpSUWhCYlBqa2F6WXdYOWlITWVZMTgKfkYQXdAYXYL0GEZF+TVzCR0I+pw3iqFm
        eAoUD3NPheHsb6vD5YI5KD0pRVM4cmfFuvhrQ4QeWu2dwDHgzQJ/Zw==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T22:44:51Z"
  mac: ENC[AES256_GCM,data:JTUwAKGT6xVX6ZqLp9PF60vpNDtUjKS1q71Pe+eG9VI4fzJGQfvpiPLUIH+zQz9bzQyJ1s2xQX5nW+9JcywwyO1u4BM5P133z8vbdg8mRF94TQ9AG71IZSZvg/sH4o85D4xA8lSOFJcEywWwy5MUFLg63qVITDywxAtDQ6f98oU=,iv:ywiMuF+GBxspQk8Ixy9iFDW9eHryJ04tDKmVg2zbbr4=,tag:f6Jvm1vhnZjd3FKFio89JQ==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: weave-gitops
  namespace: flux-system
spec:
  interval: 15m
  chart:
    spec:
      chart: weave-gitops
      version: 4.0.13
      sourceRef:
        kind: HelmRepository
        name: weave-gitops
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    adminUser:
      create: true
      username: admin
    ingress:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/whitelist-source-range: |
          10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hajimari.io/icon: sawtooth-wave
      hosts:
        - host: &host "gitops.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
    networkPolicy:
      create: false
    metrics:
      enabled: true
    rbac:
      create: true
      impersonationResourceNames: ["admin"]
    podAnnotations:
      secret.reloader.stakater.com/reload: weave-gitops-secret
  valuesFrom:
    - kind: Secret
      name: weave-gitops-secret
      valuesKey: adminPassword
      targetPath: adminUser.passwordHash
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./addons/ks.yaml
  - ./weave-gitops/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-flux-webhooks
  namespace: flux-system
spec:
  path: ./kubernetes/apps/flux-system/addons/webhooks
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./github
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flux-webhook
  namespace: flux-system
  annotations:
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    hajimari.io/enable: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: &host "flux-webhook.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /hook/
            pathType: Prefix
            backend:
              service:
                name: webhook-receiver
                port:
                  number: 80
  tls:
    - hosts:
        - *host
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./secret.sops.yaml
  - ./ingress.yaml
  - ./receiver.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: github-webhook-token-secret
  namespace: flux-system
stringData:
  token: ENC[AES256_GCM,data:TlEtZdwseMl52qpapJuCoB9bBn5oiu3B2SQl3CP/HPBgGRXC1lUqFg==,iv:jzep7eLiBt01W5nRCjs/tK9lrfWWWsWAxmS98TIggsE=,tag:pq9vjTWGbeVYDTeIRoFSqA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBuV3NTQ3BDVHJYVHlRUk8w
        Tm43RE5XNDVlWE5rL1krTEdYeUY2dzcwSFVZCjJpcVhORTc2U0x5NGFGZ2lYZEVF
        NHNES2hQalpUaDdURm5jbnRhb0p3WTgKLS0tIEQ1bm5pcnNwY1dReDBaMXFManVK
        N2VFTm8xNUI3SkRKOFkwb1UycHF3bWsKxb2+CjqlGZlsI8C4+KzpLI38evxDg33X
        KOQKLmqQbcaUA0vxHju6+SDJDtVWrlLHcfa/HDvB60Ewx4oNUkFO3Q==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T22:44:51Z"
  mac: ENC[AES256_GCM,data:WRdYuZQrhUn/UZLIiCqGWjeYZG3bwkEtCkyG5PIpzEFsOD/KfFRFuObw1UG1b8lY+ttPxyMVhb/COhMkK0tKrI0kv6Lt2EM1zqObCB/kD1+lSzU7nRwSabs9oF3mUq2fiMf6KysZD7ECCaf4U1ZnqOdpwZcTGX+cwJFdDxytiA4=,iv:iiDJiD+DcBq8imUJ0CkYoaECX7XPEGuP2ORRq1kT6QU=,tag:217nFBtWwKfoLiFTkbCJbw==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: notification.toolkit.fluxcd.io/v1beta1
kind: Receiver
metadata:
  name: github-receiver
  namespace: flux-system
spec:
  type: github
  events:
    - ping
    - push
  secretRef:
    name: github-webhook-token-secret
  resources:
    - apiVersion: source.toolkit.fluxcd.io/v1beta2
      kind: GitRepository
      name: home-kubernetes
      namespace: flux-system
    - apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
      kind: Kustomization
      name: cluster
      namespace: flux-system
    - apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
      kind: Kustomization
      name: cluster-apps
      namespace: flux-system
---
apiVersion: v1
kind: Namespace
metadata:
  name: flux-system
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-cloudflare-ddns
  namespace: flux-system
spec:
  path: ./kubernetes/apps/networking/cloudflare-ddns/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: cloudflare-ddns
      namespace: networking
  interval: 30m
  timeout: 5m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./secret.sops.yaml
  - ./helmrelease.yaml
configMapGenerator:
  - name: cloudflare-ddns-configmap
    files:
      - ./cloudflare-ddns.sh
generatorOptions:
  disableNameSuffixHash: true
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-ddns-secret
  namespace: networking
type: Opaque
stringData:
  CLOUDFLARE_EMAIL: ENC[AES256_GCM,data:992TzxKucMxPzpYJzGZFdDCbFXNn6QFXWQ==,iv:ZY1VlTJERhz4imiAwpsEp3PtOiRezGowU5tB4oaRJvA=,tag:diX3AGTBKcZ9CPers09L5g==,type:str]
  CLOUDFLARE_API_TOKEN: ENC[AES256_GCM,data:RQ6JSfgmqf+5K1EXjPtmTh3XUfCZDbhW4jOLLf84+OqSYL1DD8vJ3g==,iv:84SZ0B1u6FANw1cNATC30ZVu6jYcbBxr6W8+BS8g7pE=,tag:ZHOhFKYPZ7xmp+Z4uleIzw==,type:str]
  CLOUDFLARE_RECORD_NAME: ENC[AES256_GCM,data:JGs2o7axbc5/ItUq,iv:GS95ZKWK577Dnr0FB2I5PNuUxqBMQqozM0okoNvYZKU=,tag:dn9sUk2hoX7s1Qixn6Jm/g==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBtZllFUzMreTVLUFdxc1cx
        bFRLVHhjcVhzejBYVGZqbXNDTExlZW1HTUVjCkZ6SyswaFREQUpOaEJnOWRHb2VK
        Q0tGaUVXQXV4S2FUTlJJMXZoYW9wVzgKLS0tIDQzVWFXS0xmSmwva3JNVEIwYWhT
        TWVhWCsyT3VqNHFBYkpOZkV1dHpqT28K36SgFV3YkpQ5KEj6i+FhBq8Fn8D+x7f+
        9RW+H4gpV4eSL9L5SQkbTesYyfsLOdqPOn8lhjCIsPRP9GOQAGnB1A==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:15:15Z"
  mac: ENC[AES256_GCM,data:8ylKSAQOKoPh9SQiZ0t8ZUdUaYL3tfvUP1hvQH84vClEqZKJdGiDwS3eVMXPgixuR8lpWmt9TGLaRmaXPLc60LK6GKSoKuBLx/fNIxjBAdwJTwI+YUQhvgoh2rQgMY0shmW7xAZUAm1LjWyn8Wywey0xV5h+PrwSb4P+bH2D58E=,iv:mQASBmY+HRWvyNC9Pv3CLzkLI1FvbyTcgUQdQuU+lEw=,tag:SGOm+p60aPiY8raSKg9O1Q==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cloudflare-ddns
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: cronjob
      cronjob:
        concurrencyPolicy: Forbid
        schedule: "@hourly"
    restartPolicy: OnFailure
    image:
      repository: ghcr.io/onedr0p/kubernetes-kubectl
      tag: 1.26.1@sha256:c85224928b2e384e63bd8c9ba89753dd3d1cd9c178350d83efa3182b480c31a0
    command: ["/bin/bash", "/app/cloudflare-ddns.sh"]
    envFrom:
      - secretRef:
          name: cloudflare-ddns-secret
    service:
      main:
        enabled: false
    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflare-ddns-configmap
        subPath: cloudflare-ddns.sh
        mountPath: /app/cloudflare-ddns.sh
        defaultMode: 0775
        readOnly: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-external-dns
  namespace: flux-system
spec:
  path: ./kubernetes/apps/networking/external-dns/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: external-dns
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./secret.sops.yaml
  - ./helmrelease.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: external-dns-secret
  namespace: networking
stringData:
  email: ENC[AES256_GCM,data:sog9hsuoZY48Pvo4mC2A76riET9VRQbRwQ==,iv:ng4ftPA+5QZ4EOiZR5G2R7mdBAvHzDME3peS0cn8AfM=,tag:zHqvkdkvArW2aoy7s06TTw==,type:str]
  api-token: ENC[AES256_GCM,data:Ts34L2SxhbSiymqIGfTdWh04rqWSQbwstNLJrvKXaG0uUPnLzezkhw==,iv:weIEhS93TIS/BBL4ja55CAaV2w2Etp4ADLT0yX9k/kw=,tag:81BZG+e4ZJ4IwZeZU+wcBA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAvZWZzYnFJcVo1WExMMm9i
        VUo2Qi9SeVBsd2U1MXk1ZTQ5cm9NbURVZVhjCmNOWTVWcTVVWXROUExkeGRWNXVi
        bTZ0UTNPOUlDSFhtQ0VwVUZNT3Q2dnMKLS0tIHI4bk0xUlZ0azJmdFQrTUVYcHFX
        eUhuOGg3YmVKb21FS1BFb3phK2dpbjQKOnl9VGpAIdFX3wjhnSBqlRD147xr8T8C
        6DQUBuRovi1XyYOzcSrTgHsa24JcYq4L7UjtEMnUgBvfcVsBwwT4Yw==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:15:15Z"
  mac: ENC[AES256_GCM,data:Ucg0DWxIOnTFEu7EpTQwDoF99ZySi+uCIHh2I+Q53j1b3UeZdMGxCrnxdojVnZcINjUusrtbpizqO/Si6UZdGxjThfFAMv0d4v6L6zN94LfyGbjujwdguzbhco1DoHCzy/x15XWbBSY8M8dvfC9yZpupeNxj+agp1W1yEoS/HF8=,iv:6ODXKT+WQNRh2MqvalLdiy9tdEiKC8hbzCPcgK1/LZQ=,tag:1pCHCGn+LU0ZkBnc0hAmMQ==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: external-dns
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: external-dns
      version: 1.12.1
      sourceRef:
        kind: HelmRepository
        name: external-dns
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    interval: 2m
    # logLevel: debug
    provider: cloudflare
    env:
      - name: CF_API_EMAIL
        valueFrom:
          secretKeyRef:
            name: external-dns-secret
            key: email
      - name: CF_API_TOKEN
        valueFrom:
          secretKeyRef:
            name: external-dns-secret
            key: api-token
    extraArgs:
      - --cloudflare-proxied
      - --annotation-filter=external-dns.alpha.kubernetes.io/target
    policy: sync
    sources: ["ingress"]
    txtPrefix: k8s.
    txtOwnerId: default
    domainFilters: ["${SECRET_DOMAIN}"]
    serviceMonitor:
      enabled: true
    podAnnotations:
      secret.reloader.stakater.com/reload: external-dns-secret
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./cloudflare-ddns/ks.yaml
  - ./external-dns/ks.yaml
  - ./ingress-nginx/ks.yaml
  - ./k8s-gateway/ks.yaml
  - ./metallb/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-k8s-gateway
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-metallb
    - name: cluster-apps-metallb-config
  path: ./kubernetes/apps/networking/k8s-gateway/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: k8s-gateway
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 10m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: k8s-gateway
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: k8s-gateway
      version: 2.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-gateway
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: k8s-gateway
    domain: "${SECRET_DOMAIN}"
    ttl: 1
    service:
      type: LoadBalancer
      port: 53
      annotations:
        metallb.universe.tf/loadBalancerIPs: "${METALLB_K8S_GATEWAY_ADDR}"
      externalTrafficPolicy: Local
---
apiVersion: v1
kind: Namespace
metadata:
  name: networking
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-metallb
  namespace: flux-system
spec:
  path: ./kubernetes/apps/networking/metallb/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: metallb
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-metallb-config
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-metallb
  path: ./kubernetes/apps/networking/metallb/config
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: metallb
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: metallb
      version: 0.13.7
      sourceRef:
        kind: HelmRepository
        name: metallb
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: true
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - resources.yaml
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: l2-ip
  namespace: networking
spec:
  ipAddressPools:
    - default-pool
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: default-pool
  namespace: networking
spec:
  addresses:
    - "${METALLB_LB_RANGE}"
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-ingress-nginx-certificates
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-cert-manager-issuers
  path: ./kubernetes/apps/networking/ingress-nginx/certificates
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-ingress-nginx
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-ingress-nginx-certificates
    - name: cluster-apps-metallb-config
  path: ./kubernetes/apps/networking/ingress-nginx/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: ingress-nginx
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./helmrelease.yaml
configMapGenerator:
  - name: cloudflare-networks
    files:
      - ./cloudflare-networks.txt
generatorOptions:
  disableNameSuffixHash: true
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.4.2
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      extraEnvs:
        - name: TZ
          value: "${TIMEZONE}"
      service:
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${METALLB_INGRESS_ADDR}"
        externalTrafficPolicy: Local
      publishService:
        enabled: true
      ingressClassResource:
        default: true
      config:
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        custom-http-errors: 400,401,403,404,500,502,503,504
        enable-brotli: "true"
        forwarded-for-header: "CF-Connecting-IP"
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 10000
        proxy-body-size: "100M"
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"
        log-format-escape-json: "true"
        log-format-upstream: >-
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent"}
      metrics:
        enabled: false
      extraArgs:
        default-ssl-certificate: "networking/${SECRET_DOMAIN/./-}-production-tls"
      podAnnotations:
        configmap.reloader.stakater.com/reload: cloudflare-networks
      resources:
        requests:
          cpu: 10m
          memory: 250Mi
        limits:
          memory: 500Mi
    defaultBackend:
      enabled: true
      image:
        repository: ghcr.io/tarampampam/error-pages
        tag: 2.20.0
      extraEnvs:
        - name: TEMPLATE_NAME
          value: lost-in-space
        - name: SHOW_DETAILS
          value: "false"
  valuesFrom:
    # Cloudflare Networks
    # https://www.cloudflare.com/ips/
    - targetPath: controller.config.proxy-real-ip-cidr
      kind: ConfigMap
      name: cloudflare-networks
      valuesKey: cloudflare-networks.txt
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./certificates.yaml
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${SECRET_DOMAIN/./-}-production"
  namespace: networking
spec:
  secretName: "${SECRET_DOMAIN/./-}-production-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${SECRET_DOMAIN}"
  dnsNames:
    - "${SECRET_DOMAIN}"
    - "*.${SECRET_DOMAIN}"
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${SECRET_DOMAIN/./-}-staging"
  namespace: networking
spec:
  secretName: "${SECRET_DOMAIN/./-}-staging-tls"
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  commonName: "${SECRET_DOMAIN}"
  dnsNames:
    - "${SECRET_DOMAIN}"
    - "*.${SECRET_DOMAIN}"
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./cert-manager/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-cert-manager
  namespace: flux-system
spec:
  path: ./kubernetes/apps/cert-manager/cert-manager/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: cert-manager
      namespace: cert-manager
  interval: 30m
  retryInterval: 1m
  timeout: 10m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-cert-manager-issuers
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-cert-manager
  path: ./kubernetes/apps/cert-manager/cert-manager/issuers
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  interval: 30m
  retryInterval: 1m
  timeout: 10m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: cert-manager
resources:
  - ./helmrelease.yaml
  - ./prometheusrule.yaml
configMapGenerator:
  - name: cert-manager-dashboard
    files:
      - cert-manager-dashboard.json=https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
generatorOptions:
  disableNameSuffixHash: true
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
  labels:
    grafana_dashboard: "true"
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: cert-manager.rules
  namespace: cert-manager
spec:
  groups:
    - name: cert-manager
      rules:
        - alert: CertManagerAbsent
          expr: |
            absent(up{job="cert-manager"})
          for: 15m
          labels:
            severity: critical
          annotations:
            description: "New certificates will not be able to be minted, and existing ones can't be renewed until cert-manager is back."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerabsent
            summary: "Cert Manager has dissapeared from Prometheus service discovery."
    - name: certificates
      rules:
        - alert: CertManagerCertExpirySoon
          expr: |
            avg by (exported_namespace, namespace, name) (
            certmanager_certificate_expiration_timestamp_seconds - time())
              < (21 * 24 * 3600)
          for: 15m
          labels:
            severity: warning
          annotations:
            description: "The domain that this cert covers will be unavailable after {{ $value | humanizeDuration }}. Clients using endpoints that this cert protects will start to fail in {{ $value | humanizeDuration }}."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertexpirysoon
            summary: "The cert {{ $labels.name }} is {{ $value | humanizeDuration }} from expiry, it should have renewed over a week ago."
        - alert: CertManagerCertNotReady
          expr: |
            max by (name, exported_namespace, namespace, condition) (
            certmanager_certificate_ready_status{condition!="True"} == 1)
          for: 15m
          labels:
            severity: critical
          annotations:
            description: "This certificate has not been ready to serve traffic for at least 10m. If the cert is being renewed or there is another valid cert, the ingress controller _may_ be able to serve that instead."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertnotready
            summary: "The cert {{ $labels.name }} is not ready to serve traffic."
        - alert: CertManagerHittingRateLimits
          expr: |
            sum by (host) (rate(certmanager_http_acme_client_request_count{status="429"}[5m]))
              > 0
          for: 15m
          labels:
            severity: critical
          annotations:
            description: "Depending on the rate limit, cert-manager may be unable to generate certificates for up to a week."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerhittingratelimits
            summary: "Cert manager hitting LetsEncrypt rate limits."
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 15m
  chart:
    spec:
      chart: cert-manager
      version: v1.11.0
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    installCRDs: true
    extraArgs:
      - --dns01-recursive-nameservers=1.1.1.1:53,9.9.9.9:53
      - --dns01-recursive-nameservers-only
    podDnsPolicy: None
    podDnsConfig:
      nameservers:
        - "1.1.1.1"
        - "9.9.9.9"
    prometheus:
      enabled: true
      servicemonitor:
        enabled: true
        prometheusInstance: monitoring
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./secret.sops.yaml
  - ./issuers.yaml
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: "${SECRET_CLOUDFLARE_EMAIL}"
    privateKeySecretRef:
      name: letsencrypt-production
    solvers:
      - dns01:
          cloudflare:
            apiTokenSecretRef:
              name: cert-manager-secret
              key: api-token
        selector:
          dnsZones:
            - "${SECRET_DOMAIN}"
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: "${SECRET_CLOUDFLARE_EMAIL}"
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
      - dns01:
          cloudflare:
            apiTokenSecretRef:
              name: cert-manager-secret
              key: api-token
        selector:
          dnsZones:
            - "${SECRET_DOMAIN}"
---
apiVersion: v1
kind: Secret
metadata:
  name: cert-manager-secret
  namespace: cert-manager
stringData:
  api-token: ENC[AES256_GCM,data:h1auHGTrKNXVcxAefYZ+tKagXpO3uFEzP1pjE2OqQDpkHod5fjNsDg==,iv:aYBmjrfghuMNfeZHh3cZ5nzALE8YDi18tHQOkV8THLY=,tag:ITSqqsnGmUyCx99Q2LSiuA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAyUi9OVHcvNmxGSU5ZZ0hm
        K09IbFlMV1B4ek9yR0lwK3owUDIwN1FUdkZ3CkRRMjJXSjVVYzhHSXMyVWxnNS9Y
        dkhrT0pEcUd4UkYrdCtFTFFQQW5EQWcKLS0tIDhPRDdOeGlVbERvc1gvU0s0dlND
        U2tMaCtmbm9vRXYzaXVPeXlGanZBYkEKVDJT8oBEP15x0VVlayHxucNQTrURvuON
        zvVxyAwqBmzpIY29DEni4eZJkxtLIwPwZdYcd0Y3plxSxRF/eqpamA==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:11:36Z"
  mac: ENC[AES256_GCM,data:p7ATiVsjWczUdl/p90owteUNRtcHph4HfPpc7OYrc4AzWkVJqp7e76zN3bZSDHWtQHHWmM/Eyp1ZmJNAYA8tdgLMr5P+sQ3LD2NOudF6Sfud29rsFEtGqdf+q6F7calvU8gY8uU5KOsowlah3gOAqCdrqRs6AlDI4h7QJdVrvmc=,iv:HM/BAhojKvRc8zeAA3mYmTK9AaaTGU6lfLFdzLV0sIc=,tag:z5nzOyE3I3QVcWqy5pQ2/w==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./echo-server/ks.yaml
  - ./hajimari/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-echo-server
  namespace: flux-system
spec:
  path: ./kubernetes/apps/default/echo-server/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: echo-server
      namespace: default
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: default
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: echo-server
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      strategy: RollingUpdate
    image:
      repository: docker.io/jmalloc/echo-server
      tag: 0.3.4
    service:
      main:
        ports:
          http:
            port: &port 8080
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/icon: video-input-antenna
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    resources:
      requests:
        cpu: 5m
        memory: 10Mi
      limits:
        memory: 50Mi
---
apiVersion: v1
kind: Namespace
metadata:
  name: default
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-hajimari
  namespace: flux-system
spec:
  path: ./kubernetes/apps/default/hajimari/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: hajimari
      namespace: default
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: default
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: hajimari
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: hajimari
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: hajimari
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    hajimari:
      title: Apps
      darkTheme: espresso
      alwaysTargetBlank: true
      showGreeting: false
      showAppGroups: false
      showAppStatus: false
      showBookmarkGroups: false
      showGlobalBookmarks: false
      showAppUrls: false
      defaultEnable: true
      namespaceSelector:
        matchNames:
          - default
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hosts:
          - host: &host "hajimari.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podAnnotations:
      configmap.reloader.stakater.com/reload: hajimari-settings
    persistence:
      data:
        enabled: true
        type: emptyDir
    resources:
      requests:
        cpu: 100m
        memory: 128M
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-system-upgrade-controller
  namespace: flux-system
spec:
  path: ./kubernetes/apps/system-upgrade/system-upgrade-controller/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-system-upgrade-controller-plans
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-system-upgrade-controller
  path: ./kubernetes/apps/system-upgrade/system-upgrade-controller/plans
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 5m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # renovate: datasource=docker image=rancher/system-upgrade-controller
  - https://github.com/rancher/system-upgrade-controller/releases/download/v0.10.0/crd.yaml
  - https://github.com/rancher/system-upgrade-controller?ref=v0.10.0
images:
  - name: rancher/system-upgrade-controller
    newTag: v0.10.0
commonLabels:
  app.kubernetes.io/name: system-upgrade-controller
  app.kubernetes.io/instance: system-upgrade-controller
patchesStrategicMerge:
  - |
    $patch: delete
    apiVersion: v1
    kind: Namespace
    metadata:
      name: system-upgrade
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: server
  namespace: system-upgrade
spec:
  # renovate: datasource=github-releases depName=k3s-io/k3s
  version: "v1.26.1+k3s1"
  serviceAccountName: system-upgrade
  concurrency: 1
  cordon: true
  nodeSelector:
    matchExpressions:
      - {key: node-role.kubernetes.io/control-plane, operator: Exists}
  upgrade:
    image: rancher/k3s-upgrade
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: agent
  namespace: system-upgrade
spec:
  # renovate: datasource=github-releases depName=k3s-io/k3s
  version: "v1.26.1+k3s1"
  serviceAccountName: system-upgrade
  concurrency: 1
  nodeSelector:
    matchExpressions:
      - {key: node-role.kubernetes.io/control-plane, operator: DoesNotExist}
  prepare:
    image: rancher/k3s-upgrade
    args: ["prepare", "server"]
  upgrade:
    image: rancher/k3s-upgrade
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./server.yaml
  - ./agent.yaml
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  # - ./system-upgrade-controller/ks.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: system-upgrade
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-reloader
  namespace: flux-system
spec:
  path: ./kubernetes/apps/kube-system/reloader/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: reloader
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: reloader
  namespace: &namespace kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: reloader
      version: v1.0.5
      sourceRef:
        kind: HelmRepository
        name: stakater
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: reloader
    reloader:
      reloadStrategy: annotations
      podMonitor:
        enabled: true
        namespace: *namespace
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-local-path-provisioner
  namespace: flux-system
  labels:
    substitution.flux.home.arpa/disabled: "true"
spec:
  path: ./kubernetes/apps/kube-system/local-path-provisioner/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: local-path-provisioner
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: local-path-provisioner
  namespace: kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: ./deploy/chart/local-path-provisioner
      sourceRef:
        kind: GitRepository
        name: local-path-provisioner
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    helperImage:
      repository: public.ecr.aws/docker/library/busybox
      tag: latest
    storageClass:
      defaultClass: false
    nodePathMap:
      - node: DEFAULT_PATH_FOR_NON_LISTED_NODES
        paths: ["/var/lib/rancher/k3s/storage"]
    # Note: Do not enable Flux variable substitution on this HelmRelease
    configmap:
      setup: |-
        #!/bin/sh
        while getopts "m:s:p:" opt
        do
            case $opt in
                p)
                absolutePath=$OPTARG
                ;;
                s)
                sizeInBytes=$OPTARG
                ;;
                m)
                volMode=$OPTARG
                ;;
            esac
        done
        mkdir -m 0777 -p ${absolutePath}
        chmod 701 ${absolutePath}/..
      teardown: |-
        #!/bin/sh
        while getopts "m:s:p:" opt
        do
            case $opt in
                p)
                absolutePath=$OPTARG
                ;;
                s)
                sizeInBytes=$OPTARG
                ;;
                m)
                volMode=$OPTARG
                ;;
            esac
        done
        rm -rf ${absolutePath}
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-metrics-server
  namespace: flux-system
spec:
  path: ./kubernetes/apps/kube-system/metrics-server/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: metrics-server
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: metrics-server
  namespace: kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: metrics-server
      version: 3.8.3
      sourceRef:
        kind: HelmRepository
        name: metrics-server
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    args:
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
    metrics:
      enabled: true
    serviceMonitor:
      enabled: true
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./kube-vip/ks.yaml
  - ./local-path-provisioner/ks.yaml
  - ./metrics-server/ks.yaml
  - ./reloader/ks.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-system
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-kube-vip
  namespace: flux-system
spec:
  path: ./kubernetes/apps/kube-system/kube-vip/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: apps/v1
      kind: DaemonSet
      name: kube-vip
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-vip
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: kube-vip
    app.kubernetes.io/name: kube-vip
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kube-vip
      app.kubernetes.io/name: kube-vip
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kube-vip
        app.kubernetes.io/name: kube-vip
    spec:
      containers:
        - name: kube-vip
          image: ghcr.io/kube-vip/kube-vip:v0.5.9
          imagePullPolicy: IfNotPresent
          args: ["manager"]
          env:
            - name: vip_arp
              value: "true"
            - name: port
              value: "6443"
            - name: vip_cidr
              value: "32"
            - name: cp_enable
              value: "true"
            - name: cp_namespace
              value: kube-system
            - name: svc_enable
              value: "false"
            - name: vip_leaderelection
              value: "true"
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            - name: address
              value: "${KUBE_VIP_ADDR}"
          securityContext:
            capabilities:
              add: ["NET_ADMIN", "NET_RAW"]
      hostAliases:
        - hostnames:
            - kubernetes
          ip: 127.0.0.1
      hostNetwork: true
      serviceAccountName: kube-vip
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./rbac.yaml
  - ./daemonset.yaml
labels:
  - pairs:
      kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-vip
  namespace: kube-system
secrets:
  - name: kube-vip
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: kube-vip
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: kube-vip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:kube-vip-role
rules:
  - apiGroups: [""]
    resources: ["services", "services/status", "nodes"]
    verbs: ["list", "get", "watch", "update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["list", "get", "watch", "update", "create"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:kube-vip-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-vip-role
subjects:
  - kind: ServiceAccount
    name: kube-vip
    namespace: kube-system
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-kubernetes-dashboard
  namespace: flux-system
spec:
  path: ./kubernetes/apps/monitoring/kubernetes-dashboard/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: kubernetes-dashboard
      namespace: monitoring
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: monitoring
resources:
  - ./rbac.yaml
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kubernetes-dashboard
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kubernetes-dashboard
      version: 6.0.0
      sourceRef:
        kind: HelmRepository
        name: kubernetes-dashboard
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    env:
      TZ: "${TIMEZONE}"
    extraArgs:
      - --enable-skip-login
      - --disable-settings-authorizer
      - --enable-insecure-login
      - --token-ttl=43200
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-staging
        hajimari.io/icon: mdi:kubernetes
      hosts:
        - &host "kubernetes.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: kubernetes-dashboard-tls
    metricsScraper:
      enabled: true
    serviceMonitor:
      enabled: false
---

# For dashboard sign in token:
# kubectl -n monitoring get secret kubernetes-dashboard -o jsonpath='{.data.token}' | base64 -d
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-dashboard
  namespace: monitoring
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: kubernetes-dashboard
    meta.helm.sh/release-namespace: monitoring
secrets:
  - name: kubernetes-dashboard
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: kubernetes-dashboard
  namespace: monitoring
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: kubernetes-dashboard
    meta.helm.sh/release-namespace: monitoring
    kubernetes.io/service-account.name: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: monitoring
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./kubernetes-dashboard/ks.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.50.7
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
    timeout: 15m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-initdb:14.7
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    rbac:
      pspEnabled: false
    tolerations:
      - key: "arm"
        operator: "Exists"
    deploymentStrategy:
      type: Recreate
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      # GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
    GF_SERVER_ROOT_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
    # VAR_BLOCKY_URL: "http://blocky.default.svc.cluster.local:4000"
    envFromSecrets:
      - name: grafana-secret
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
      hosts: [grafana.eviljungle.com]
      tls:
        - hosts:
            - grafana.eviljungle.com
    plugins:
      - pr0ps-trackmap-panel
      - natel-plotly-panel
      - vonage-status-panel
      - grafana-piechart-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - grafana-clock-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'teslamate'
            orgId: 1
            folder: Teslamate
            type: file
            disableDeletion: false
            # updateIntervalSeconds: -1
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/teslamate
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11074-node-exporter-for-prometheus-dashboard-en-v20201010/
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        blocky:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.20/docs/blocky-grafana.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342-ceph-pools/
        ceph-pools:
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336-ceph-osd-single/
        ceph-osd:
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842-ceph-cluster/
        ceph-cluster:
          gnetId: 2842
          revision: 16
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Loki
        frigate:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/frigate.json
          datasource: Prometheus
        home-assistant:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
          datasource: home_assistant
        loki:
          gnetId: 13407
          revision: 1
          datasource: Prometheus
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 29
          datasource: Prometheus
        opnsense:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/opnsense.json
          datasource: Prometheus
        prometheus-exporter-summary:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
          datasource: Prometheus
        speedtest-exporter:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/speedtest-exporter.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/12921-truenas/
        TrueNAS:
          url: https://grafana.com/api/dashboards/12921/revisions/1/download
          datasource: TrueNAS
        # # Ref: https://grafana.com/grafana/dashboards/11315
        # unifi-client-insights:
        #   gnetId: 11315
        #   revision: 9
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11311
        # unifi-network-sites:
        #   gnetId: 11311
        #   revision: 5
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11314
        # unifi-uap-insights:
        #   gnetId: 11314
        #   revision: 10
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11312
        # unifi-usw-insights:
        #   gnetId: 11312
        #   revision: 9
        #   datasource: Prometheus
        ups:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/ups.json
          datasource: Prometheus
        uptimerobot:
          url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
          datasource: Prometheus
        windows-node:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/windows_node.json
          datasource: Prometheus
      teslamate:
        charge-level:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/charge-level.json
          # datasource: TeslaMate
        charges:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/charges.json
          # datasource: TeslaMate
        charging-stats:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/charging-stats.json
          # datasource: TeslaMate
        drive-stats:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/drive-stats.json
          # datasource: TeslaMate
        drives:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/drives.json
          # datasource: TeslaMate
        efficiency:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/efficiency.json
          # datasource: TeslaMate
        locations:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/locations.json
          # datasource: TeslaMate
        mileage:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/mileage.json
          # datasource: TeslaMate
        overview:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/overview.json
          # datasource: TeslaMate
        projected-range:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/projected-range.json
          # datasource: TeslaMate
        states:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/states.json
          # datasource: TeslaMate
        statistics:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/statistics.json
          # datasource: TeslaMate
        timeline:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/timeline.json
          # datasource: TeslaMate
        trip:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/trip.json
          # datasource: TeslaMate
        updates:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/updates.json
          datasource: TeslaMate
        vampire-drain:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/vampire-drain.json
          # datasource: TeslaMate
        visited:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/visited.json
          # datasource: TeslaMate
        charge-details:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/internal/charge-details.json
        drive-details:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/internal/drive-details.json
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.logs.svc.cluster.local:80
          - name: influxdb
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: telegraf
          - name: comcast
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: comcast
          - name: home_assistant
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: home_assistant
          - name: speedtests
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: speedtests
          - name: uptimerobot
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: uptimerobot
          - name: TeslaMate
            type: postgres
            access: proxy
            url: postgres-v15-rw.default.svc.cluster.local:5432
            database: teslamate
            user: teslamate
            secureJsonData:
              password: "$TESLAMATE_DB_PASSWORD"
            jsonData:
              postgresVersion: 1000
              sslmode: disable
          - name: TrueNAS
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: graphitedb
    grafana.ini:
      auth:
        oauth_skip_org_role_update_sync: false
      auth.basic:
        disable_login_form: true
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        team_ids:
        allowed_organizations:
        name: Auth0
        client_id: # Set by env vars
        client_secret: # Set by env vars
        scopes: openid profile email
        auth_url: https://billimek.auth0.com/authorize
        token_url: https://billimek.auth0.com/oauth/token
        api_url: https://billimek.auth0.com/userinfo
      # ref: https://blog.dahanne.net/2020/04/15/integrating-auth0-oidc-oauth-2-with-authorization-groups-and-roles/
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains("https://billimek.com/groups"[*], 'Admin') && 'Admin' || contains("https://billimek.com/groups"[*], 'Editor') && 'Editor' || 'Viewer'
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
cloudflare_email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
cloudflare_api_token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
cloudflare_domain: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
---
creation_rules:
  - path_regex: kubernetes/.*\.sops\.ya?ml
    encrypted_regex: "^(data|stringData)$"
    key_groups:
      - age:
          - ${BOOTSTRAP_AGE_PUBLIC_KEY}
  - path_regex: ansible/.*\.sops\.ya?ml
    key_groups:
      - age:
          - ${BOOTSTRAP_AGE_PUBLIC_KEY}
  - path_regex: terraform/.*\.sops\.ya?ml
    key_groups:
      - age:
          - ${BOOTSTRAP_AGE_PUBLIC_KEY}
---
apiVersion: v1
kind: Secret
metadata:
  name: external-dns-secret
  namespace: networking
stringData:
  email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
  api-token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-settings
  namespace: flux-system
data:
  TIMEZONE: "${BOOTSTRAP_TIMEZONE}"
  KUBE_VIP_ADDR: "${BOOTSTRAP_KUBE_VIP_ADDR}"
  METALLB_LB_RANGE: "${BOOTSTRAP_METALLB_LB_RANGE}"
  METALLB_K8S_GATEWAY_ADDR: "${BOOTSTRAP_METALLB_K8S_GATEWAY_ADDR}"
  METALLB_INGRESS_ADDR: "${BOOTSTRAP_METALLB_INGRESS_ADDR}"
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: GitRepository
metadata:
  name: home-kubernetes
  namespace: flux-system
spec:
  interval: 30m
  ref:
    branch: main
  url: "${BOOTSTRAP_GIT_REPOSITORY}"
  ignore: |
    # exclude all
    /*
    # include kubernetes directory
    !/kubernetes
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster
  namespace: flux-system
spec:
  interval: 30m
  path: ./kubernetes/flux
  prune: true
  wait: false
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  decryption:
    provider: sops
    secretRef:
      name: sops-age
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
      - kind: Secret
        name: cluster-secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-secrets
  namespace: flux-system
stringData:
  SECRET_DOMAIN: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
  SECRET_CLOUDFLARE_EMAIL: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
---
apiVersion: v1
kind: Secret
metadata:
  name: github-webhook-token-secret
  namespace: flux-system
stringData:
  token: "${BOOTSTRAP_FLUX_GITHUB_WEBHOOK_SECRET}"
---
apiVersion: v1
kind: Secret
metadata:
  name: cert-manager-secret
  namespace: cert-manager
stringData:
  api-token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
---
apiVersion: v1
kind: Secret
metadata:
  name: weave-gitops-secret
  namespace: flux-system
type: Opaque
stringData:
  adminPassword: "${BOOTSTRAP_WEAVE_GITOPS_ADMIN_PASSWORD}"
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-ddns-secret
  namespace: networking
type: Opaque
stringData:
  CLOUDFLARE_EMAIL: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
  CLOUDFLARE_API_TOKEN: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
  CLOUDFLARE_RECORD_NAME: "ipv4.${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
---
# DO NOT MODIFY
# This file was generated by pre-commit-hooks.nix
{"default_stages": ["commit"], "exclude": "(.devenv.flake.nix)", "repos": [{"hooks": [{"always_run": false, "entry": "/nix/store/d55nhl98qr72p735s9p4cgaxim9x30bw-alejandra-3.0.0/bin/alejandra ", "exclude": "^$", "files": "\\.nix$", "id": "alejandra", "language": "system", "name": "alejandra", "pass_filenames": true, "stages": ["commit"], "types": ["file"], "types_or": [], "verbose": false}, {"always_run": false, "entry": "/nix/store/zvi1f3n3f71pqd9byk4jlg9dbj23g2vj-terraform-fmt/bin/terraform-fmt", "exclude": "^$", "files": "\\.tf$", "id": "terraform-format", "language": "system", "name": "terraform-format", "pass_filenames": true, "stages": ["commit"], "types": ["file"], "types_or": [], "verbose": false}, {"always_run": false, "entry": "/nix/store/q3z9vs48wghmvl7mrbxi5ir5pcifl6df-python3.10-yamllint-1.32.0/bin/yamllint ", "exclude": "^$", "files": "", "id": "yamllint", "language": "system", "name": "yamllint", "pass_filenames": true, "stages": ["commit"], "types": ["file", "yaml"], "types_or": [], "verbose": false}], "repo": "local"}]}
---
inputs:
  nixpkgs:
    url: github:NixOS/nixpkgs/nixpkgs-unstable
---
ignore: |
  *.sops.*
extends: default
rules:
  truthy:
    allowed-values: ["true", "false", "on"]
  comments:
    min-spaces-from-content: 1
  line-length: disable
  braces:
    min-spaces-inside: 0
    max-spaces-inside: 1
  brackets:
    min-spaces-inside: 0
    max-spaces-inside: 0
  indentation: enable
---
# Area
- name: area/ansible
  color: "72ccf3"
  description: >-
    Changes made in the ansible directory
- name: area/github
  color: "72ccf3"
  description: >-
    Changes made in the github directory
- name: area/kubernetes
  color: "72ccf3"
  description: >-
    Changes made in the kubernetes directory
- name: area/template
  color: "72ccf3"
  description: >-
    Changes made in the tmpl directory
- name: area/terraform
  color: "72ccf3"
  description: >-
    Changes made in the terraform directory
# Renovate
- name: renovate/ansible
  color: "ffc300"
- name: renovate/container
  color: "ffc300"
- name: renovate/github-action
  color: "ffc300"
- name: renovate/github-release
  color: "ffc300"
- name: renovate/helm
  color: "ffc300"
- name: renovate/terraform
  color: "ffc300"
# Semantic Type
- name: type/patch
  color: "FFEC19"
- name: type/minor
  color: "FF9800"
- name: type/major
  color: "F6412D"
- name: type/break
  color: "F6412D"
# Uncategorized
- name: bug
  color: "ee0701"
- name: do-not-merge
  color: "ee0701"
- name: docs
  color: "F4D1B7"
- name: enhancement
  color: "84b6eb"
- name: broken-links
  color: "7B55D7"
- name: question
  color: "cc317c"
- name: community
  color: "0e8a16"
---
area/ansible:
  - "ansible/**/*"
area/github:
  - ".github/**/*"
area/kubernetes:
  - "kubernetes/**/*"
area/terraform:
  - "terraform/**/*"
area/templates:
  - "tmpl/**/*"
---
name: "Release"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Publish Latest Release
        uses: ivangabriele/publish-latest-release@df1a4afd8aea9d1f0ba5ebeb89452aeac7bca0a9 # renovate: tag=v3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
---
name: "Meta Labeler"
on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]
jobs:
  labeler:
    name: Labeler
    runs-on: ubuntu-latest
    steps:
      - name: Labeler
        uses: actions/labeler@5c7539237e04b714afd8ad9b4aed733815b9fab4 # renovate: tag=v4.0.2
        with:
          configuration-path: .github/labeler.yaml
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
---
name: "Meta Sync labels"
on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths: [".github/labels.yaml"]
jobs:
  labels:
    name: Sync Labels
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Sync Labels
        uses: EndBug/label-sync@da00f2c11fdb78e4fae44adac2fdd713778ea3e8 # renovate: tag=v2.3.2
        with:
          config-file: .github/labels.yaml
          token: "${{ secrets.GITHUB_TOKEN }}"
          delete-other-labels: true
---
name: "Draft Release"
on:
  workflow_dispatch:
  push:
    branches: ["main"]
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@cfc5540ebc9d65a8731f02032e3d44db5e449fb6 # v5.22.0
        with:
          config-name: release-drafter.yaml
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
---
name: "Link Check"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
jobs:
  link-check:
    name: Link Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Link Checker
        uses: lycheeverse/lychee-action@4dcb8bee2a0a4531cba1a1f392c54e8375d6dd81 # renovate: tag=v1.5.4
        id: lychee
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Find Link Checker Issue
        id: link-checker-issue
        uses: micalevisk/last-issue-action@044e1cb7e9a4dde20e22969cb67818bfca0797be # renovate: tag=2.0.0
        with:
          state: open
          labels: |
            broken-links
      - name: Update Issue
        uses: peter-evans/create-issue-from-file@433e51abf769039ee20ba1293a088ca19d573b7f # renovate: tag=v4.0.1
        with:
          title: "Broken links detected \U0001F517"
          issue-number: "${{ steps.link-checker-issue.outputs.issue-number }}"
          content-filepath: ./lychee/out.md
          token: "${{ secrets.GITHUB_TOKEN }}"
          labels: |
            broken-links
---
name-template: "Release v$RESOLVED_VERSION"
tag-template: "v$RESOLVED_VERSION"
change-template: "- $TITLE @$AUTHOR (#$NUMBER)"
change-title-escapes: '\<*_&'
categories:
  - title: "Community Contributions"
    labels: ["community"]
  - title: "Kubernetes"
    labels: ["area/kubernetes"]
  - title: "Github"
    labels: ["area/github"]
  - title: "Ansible"
    labels: ["area/ansible"]
  - title: "Terraform"
    labels: ["area/terraform"]
  - title: "Maintenance"
    labels: ["docs"]
version-resolver:
  major:
    labels: ["type/break"]
  minor:
    labels: ["type/major", "type/minor"]
  patch:
    labels: ["type/patch"]
  default: patch
template: |
  ## What's Changed

  $CHANGES

  **Full Changelog**: https://github.com/$OWNER/$REPOSITORY/compare/$PREVIOUS_TAG...v$RESOLVED_VERSION
---
creation_rules:
  - path_regex: kubernetes/.*\.sops\.ya?ml
    encrypted_regex: "^(data|stringData)$"
    key_groups:
      - age:
          - age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
  - path_regex: ansible/.*\.sops\.ya?ml
    key_groups:
      - age:
          - age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
  - path_regex: terraform/.*\.sops\.ya?ml
    key_groups:
      - age:
          - age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - github.com/fluxcd/flux2/manifests/install?ref=v0.39.0
patches:
  - patch: |-
      $patch: delete
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: not-used
    target:
      group: networking.k8s.io
      version: v1
      kind: NetworkPolicy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-settings
  namespace: flux-system
data:
  TIMEZONE: "America/Denver"
  KUBE_VIP_ADDR: "10.69.1.254"
  METALLB_LB_RANGE: "10.69.1.220-10.69.1.230"
  METALLB_K8S_GATEWAY_ADDR: "10.69.1.220"
  METALLB_INGRESS_ADDR: "10.69.1.221"
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./cluster-settings.yaml
  - ./cluster-secrets.sops.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-secrets
  namespace: flux-system
stringData:
  SECRET_DOMAIN: ENC[AES256_GCM,data:jDnvMz3hUw==,iv:Z7P2jT7UVfNW5RYdv3Ns4z2tTq8m3f50Mu/aaa8oo4I=,tag:2ssaP8mltOZoPTBeExBNjw==,type:str]
  SECRET_CLOUDFLARE_EMAIL: ENC[AES256_GCM,data:kk3WwTA7lcx37RjTNzpHwUArSKtXp6WsjQ==,iv:eH2zqJ/87BFrDW3DboVhpYkIm5/mkOMMYtp6dknAMP0=,tag:y9zhmgeVhJruICjZIyPa3A==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB4QkY5YXE1RFVzQVNDeEFP
        RXZ3aE5ud3RkWFlHbDdZN3R2dFhnNHBHVzNnCjlvbzdsdGJWZ0hydVBXb1J1SGxy
        dEhQaitDc0lIVTdpbnc2bnp0L1JBR2cKLS0tIEhqaFlVTjdpM0xnNWR4STBFRDB6
        MFUzNjYxNG1YcjJ1VFgwbjVrRHYyNXMKS4lavl4Az6A8BzMum5EMFBlJY+GKYo2s
        UIMf9IZ3PCY/0p7Rs5CFeKNPkOxWuSaEHPeOIF7k4GjUneD6fP5kOA==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:11:36Z"
  mac: ENC[AES256_GCM,data:x2Oa3S8I90TnAyNaKnW1GVqUeukGfn75gL4fM7A+1XBG1sDfb40rxEV6XQMI+SNuCAf2tiCLOGTFjSBHaWE1o57YmJvRZmSgJQCm5Lg2nFo7438Er+gYdJo3lVqbMUT+Vid9nmz9phc6OyifdHPgDBkgvbPhvQ4JuHUPfE8d1Yo=,iv:1X83kSYEgupLxdydo6qEIJq1hMmIGhzpuk3HZIAgdgw=,tag:5/Fzzq/JLKbnS9ztTtWjSw==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: flux-manifests
  namespace: flux-system
spec:
  interval: 10m
  url: oci://ghcr.io/fluxcd/flux-manifests
  ref:
    tag: v0.39.0
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: flux
  namespace: flux-system
spec:
  interval: 10m
  path: ./
  prune: true
  wait: true
  sourceRef:
    kind: OCIRepository
    name: flux-manifests
  patches:
    - patch: |
        $patch: delete
        apiVersion: networking.k8s.io/v1
        kind: NetworkPolicy
        metadata:
          name: not-used
      target:
        group: networking.k8s.io
        version: v1
        kind: NetworkPolicy
    - patch: |
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --concurrent=8
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --kube-api-qps=500
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --kube-api-burst=1000
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --requeue-dependency=5s
      target:
        kind: Deployment
        name: "(kustomize-controller|helm-controller|source-controller)"
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./flux.yaml
  - ./cluster.yaml
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: GitRepository
metadata:
  name: home-kubernetes
  namespace: flux-system
spec:
  interval: 30m
  ref:
    branch: main
  url: "https://github.com/teekennedy/k8s-homelab"
  ignore: |
    # exclude all
    /*
    # include kubernetes directory
    !/kubernetes
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster
  namespace: flux-system
spec:
  interval: 30m
  path: ./kubernetes/flux
  prune: true
  wait: false
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  decryption:
    provider: sops
    secretRef:
      name: sops-age
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
      - kind: Secret
        name: cluster-secrets
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./git
  - ./helm
  # - ./oci
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: k8s-gateway
  namespace: flux-system
spec:
  interval: 1h
  url: https://ori-edge.github.io/k8s_gateway/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes.github.io/ingress-nginx
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./bitnami.yaml
  - ./bjw-s.yaml
  - ./external-dns.yaml
  - ./hajimari.yaml
  - ./ingress-nginx.yaml
  - ./jetstack.yaml
  - ./k8s-gateway.yaml
  - ./kubernetes-dashboard.yaml
  - ./metallb.yaml
  - ./metrics-server.yaml
  - ./stakater.yaml
  - ./weave-gitops.yaml
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: weave-gitops
  namespace: flux-system
spec:
  interval: 1h
  url: https://helm.gitops.weave.works
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: metallb
  namespace: flux-system
spec:
  interval: 1h
  url: https://metallb.github.io/metallb
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bitnami
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.bitnami.com/bitnami
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: stakater
  namespace: flux-system
spec:
  interval: 1h
  url: https://stakater.github.io/stakater-charts
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bjw-s
  namespace: flux-system
spec:
  interval: 1h
  url: https://bjw-s.github.io/helm-charts/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: jetstack
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.jetstack.io/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: hajimari
  namespace: flux-system
spec:
  interval: 1h
  url: https://hajimari.io
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: kubernetes-dashboard
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes.github.io/dashboard/
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: metrics-server
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes-sigs.github.io/metrics-server
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: external-dns
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes-sigs.github.io/external-dns
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./local-path-provisioner.yaml
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: GitRepository
metadata:
  name: local-path-provisioner
  namespace: flux-system
spec:
  interval: 30m
  url: https://github.com/rancher/local-path-provisioner
  ref:
    tag: v0.0.23
  ignore: |
    # exclude all
    /*
    # include kubernetes directory
    !/deploy/chart/local-path-provisioner
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps
  namespace: flux-system
spec:
  interval: 30m
  path: ./kubernetes/apps
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  decryption:
    provider: sops
    secretRef:
      name: sops-age
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
      - kind: Secret
        name: cluster-secrets
  patches:
    - patch: |-
        apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
        kind: Kustomization
        metadata:
          name: not-used
        spec:
          decryption:
            provider: sops
            secretRef:
              name: sops-age
          postBuild:
            substituteFrom:
              - kind: ConfigMap
                name: cluster-settings
              - kind: Secret
                name: cluster-secrets
      target:
        group: kustomize.toolkit.fluxcd.io
        version: v1beta2
        kind: Kustomization
        labelSelector: substitution.flux.home.arpa/disabled notin (true)
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-weave-gitops
  namespace: flux-system
spec:
  path: ./kubernetes/apps/flux-system/weave-gitops/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: weave-gitops
      namespace: flux-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: flux-system
resources:
  - ./secret.sops.yaml
  - ./helmrelease.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: weave-gitops-secret
  namespace: flux-system
type: Opaque
stringData:
  adminPassword: ENC[AES256_GCM,data:/Hpagy80YkTb62ALc3zq43JfnosbLJUepLEACMY3s1KrUH1acc+izsdyFnxPMmLTRQbv1Y+bbN5aESMD,iv:ujNySTp7DWGCr6hOsKtzWV7a6S5q3us8ffQHnAelkRk=,tag:TZVcq1yItK/u/3cYwNSEFA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAvUXhoS005Z3pxVDZkOTJo
        bkZ6UFJJdnZHZ0JLVzBGdllRZzY2TlprcUJnCng0RmR3bFkrMSthTWU5KytSRVRv
        aVB6ZkZoaWdZMHJjMmliWTVzZ2ZZYTAKLS0tIE5rMm1rTmtvQ05UTVVRTHg1ZEM0
        NEpSUWhCYlBqa2F6WXdYOWlITWVZMTgKfkYQXdAYXYL0GEZF+TVzCR0I+pw3iqFm
        eAoUD3NPheHsb6vD5YI5KD0pRVM4cmfFuvhrQ4QeWu2dwDHgzQJ/Zw==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T22:44:51Z"
  mac: ENC[AES256_GCM,data:JTUwAKGT6xVX6ZqLp9PF60vpNDtUjKS1q71Pe+eG9VI4fzJGQfvpiPLUIH+zQz9bzQyJ1s2xQX5nW+9JcywwyO1u4BM5P133z8vbdg8mRF94TQ9AG71IZSZvg/sH4o85D4xA8lSOFJcEywWwy5MUFLg63qVITDywxAtDQ6f98oU=,iv:ywiMuF+GBxspQk8Ixy9iFDW9eHryJ04tDKmVg2zbbr4=,tag:f6Jvm1vhnZjd3FKFio89JQ==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: weave-gitops
  namespace: flux-system
spec:
  interval: 15m
  chart:
    spec:
      chart: weave-gitops
      version: 4.0.13
      sourceRef:
        kind: HelmRepository
        name: weave-gitops
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    adminUser:
      create: true
      username: admin
    ingress:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/whitelist-source-range: |
          10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hajimari.io/icon: sawtooth-wave
      hosts:
        - host: &host "gitops.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
    networkPolicy:
      create: false
    metrics:
      enabled: true
    rbac:
      create: true
      impersonationResourceNames: ["admin"]
    podAnnotations:
      secret.reloader.stakater.com/reload: weave-gitops-secret
  valuesFrom:
    - kind: Secret
      name: weave-gitops-secret
      valuesKey: adminPassword
      targetPath: adminUser.passwordHash
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./addons/ks.yaml
  - ./weave-gitops/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-flux-webhooks
  namespace: flux-system
spec:
  path: ./kubernetes/apps/flux-system/addons/webhooks
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./github
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flux-webhook
  namespace: flux-system
  annotations:
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    hajimari.io/enable: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: &host "flux-webhook.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /hook/
            pathType: Prefix
            backend:
              service:
                name: webhook-receiver
                port:
                  number: 80
  tls:
    - hosts:
        - *host
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./secret.sops.yaml
  - ./ingress.yaml
  - ./receiver.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: github-webhook-token-secret
  namespace: flux-system
stringData:
  token: ENC[AES256_GCM,data:TlEtZdwseMl52qpapJuCoB9bBn5oiu3B2SQl3CP/HPBgGRXC1lUqFg==,iv:jzep7eLiBt01W5nRCjs/tK9lrfWWWsWAxmS98TIggsE=,tag:pq9vjTWGbeVYDTeIRoFSqA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBuV3NTQ3BDVHJYVHlRUk8w
        Tm43RE5XNDVlWE5rL1krTEdYeUY2dzcwSFVZCjJpcVhORTc2U0x5NGFGZ2lYZEVF
        NHNES2hQalpUaDdURm5jbnRhb0p3WTgKLS0tIEQ1bm5pcnNwY1dReDBaMXFManVK
        N2VFTm8xNUI3SkRKOFkwb1UycHF3bWsKxb2+CjqlGZlsI8C4+KzpLI38evxDg33X
        KOQKLmqQbcaUA0vxHju6+SDJDtVWrlLHcfa/HDvB60Ewx4oNUkFO3Q==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T22:44:51Z"
  mac: ENC[AES256_GCM,data:WRdYuZQrhUn/UZLIiCqGWjeYZG3bwkEtCkyG5PIpzEFsOD/KfFRFuObw1UG1b8lY+ttPxyMVhb/COhMkK0tKrI0kv6Lt2EM1zqObCB/kD1+lSzU7nRwSabs9oF3mUq2fiMf6KysZD7ECCaf4U1ZnqOdpwZcTGX+cwJFdDxytiA4=,iv:iiDJiD+DcBq8imUJ0CkYoaECX7XPEGuP2ORRq1kT6QU=,tag:217nFBtWwKfoLiFTkbCJbw==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: notification.toolkit.fluxcd.io/v1beta1
kind: Receiver
metadata:
  name: github-receiver
  namespace: flux-system
spec:
  type: github
  events:
    - ping
    - push
  secretRef:
    name: github-webhook-token-secret
  resources:
    - apiVersion: source.toolkit.fluxcd.io/v1beta2
      kind: GitRepository
      name: home-kubernetes
      namespace: flux-system
    - apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
      kind: Kustomization
      name: cluster
      namespace: flux-system
    - apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
      kind: Kustomization
      name: cluster-apps
      namespace: flux-system
---
apiVersion: v1
kind: Namespace
metadata:
  name: flux-system
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-cloudflare-ddns
  namespace: flux-system
spec:
  path: ./kubernetes/apps/networking/cloudflare-ddns/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: cloudflare-ddns
      namespace: networking
  interval: 30m
  timeout: 5m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./secret.sops.yaml
  - ./helmrelease.yaml
configMapGenerator:
  - name: cloudflare-ddns-configmap
    files:
      - ./cloudflare-ddns.sh
generatorOptions:
  disableNameSuffixHash: true
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-ddns-secret
  namespace: networking
type: Opaque
stringData:
  CLOUDFLARE_EMAIL: ENC[AES256_GCM,data:992TzxKucMxPzpYJzGZFdDCbFXNn6QFXWQ==,iv:ZY1VlTJERhz4imiAwpsEp3PtOiRezGowU5tB4oaRJvA=,tag:diX3AGTBKcZ9CPers09L5g==,type:str]
  CLOUDFLARE_API_TOKEN: ENC[AES256_GCM,data:RQ6JSfgmqf+5K1EXjPtmTh3XUfCZDbhW4jOLLf84+OqSYL1DD8vJ3g==,iv:84SZ0B1u6FANw1cNATC30ZVu6jYcbBxr6W8+BS8g7pE=,tag:ZHOhFKYPZ7xmp+Z4uleIzw==,type:str]
  CLOUDFLARE_RECORD_NAME: ENC[AES256_GCM,data:JGs2o7axbc5/ItUq,iv:GS95ZKWK577Dnr0FB2I5PNuUxqBMQqozM0okoNvYZKU=,tag:dn9sUk2hoX7s1Qixn6Jm/g==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBtZllFUzMreTVLUFdxc1cx
        bFRLVHhjcVhzejBYVGZqbXNDTExlZW1HTUVjCkZ6SyswaFREQUpOaEJnOWRHb2VK
        Q0tGaUVXQXV4S2FUTlJJMXZoYW9wVzgKLS0tIDQzVWFXS0xmSmwva3JNVEIwYWhT
        TWVhWCsyT3VqNHFBYkpOZkV1dHpqT28K36SgFV3YkpQ5KEj6i+FhBq8Fn8D+x7f+
        9RW+H4gpV4eSL9L5SQkbTesYyfsLOdqPOn8lhjCIsPRP9GOQAGnB1A==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:15:15Z"
  mac: ENC[AES256_GCM,data:8ylKSAQOKoPh9SQiZ0t8ZUdUaYL3tfvUP1hvQH84vClEqZKJdGiDwS3eVMXPgixuR8lpWmt9TGLaRmaXPLc60LK6GKSoKuBLx/fNIxjBAdwJTwI+YUQhvgoh2rQgMY0shmW7xAZUAm1LjWyn8Wywey0xV5h+PrwSb4P+bH2D58E=,iv:mQASBmY+HRWvyNC9Pv3CLzkLI1FvbyTcgUQdQuU+lEw=,tag:SGOm+p60aPiY8raSKg9O1Q==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cloudflare-ddns
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: cronjob
      cronjob:
        concurrencyPolicy: Forbid
        schedule: "@hourly"
    restartPolicy: OnFailure
    image:
      repository: ghcr.io/onedr0p/kubernetes-kubectl
      tag: 1.26.1@sha256:c85224928b2e384e63bd8c9ba89753dd3d1cd9c178350d83efa3182b480c31a0
    command: ["/bin/bash", "/app/cloudflare-ddns.sh"]
    envFrom:
      - secretRef:
          name: cloudflare-ddns-secret
    service:
      main:
        enabled: false
    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflare-ddns-configmap
        subPath: cloudflare-ddns.sh
        mountPath: /app/cloudflare-ddns.sh
        defaultMode: 0775
        readOnly: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-external-dns
  namespace: flux-system
spec:
  path: ./kubernetes/apps/networking/external-dns/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: external-dns
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./secret.sops.yaml
  - ./helmrelease.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: external-dns-secret
  namespace: networking
stringData:
  email: ENC[AES256_GCM,data:sog9hsuoZY48Pvo4mC2A76riET9VRQbRwQ==,iv:ng4ftPA+5QZ4EOiZR5G2R7mdBAvHzDME3peS0cn8AfM=,tag:zHqvkdkvArW2aoy7s06TTw==,type:str]
  api-token: ENC[AES256_GCM,data:Ts34L2SxhbSiymqIGfTdWh04rqWSQbwstNLJrvKXaG0uUPnLzezkhw==,iv:weIEhS93TIS/BBL4ja55CAaV2w2Etp4ADLT0yX9k/kw=,tag:81BZG+e4ZJ4IwZeZU+wcBA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAvZWZzYnFJcVo1WExMMm9i
        VUo2Qi9SeVBsd2U1MXk1ZTQ5cm9NbURVZVhjCmNOWTVWcTVVWXROUExkeGRWNXVi
        bTZ0UTNPOUlDSFhtQ0VwVUZNT3Q2dnMKLS0tIHI4bk0xUlZ0azJmdFQrTUVYcHFX
        eUhuOGg3YmVKb21FS1BFb3phK2dpbjQKOnl9VGpAIdFX3wjhnSBqlRD147xr8T8C
        6DQUBuRovi1XyYOzcSrTgHsa24JcYq4L7UjtEMnUgBvfcVsBwwT4Yw==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:15:15Z"
  mac: ENC[AES256_GCM,data:Ucg0DWxIOnTFEu7EpTQwDoF99ZySi+uCIHh2I+Q53j1b3UeZdMGxCrnxdojVnZcINjUusrtbpizqO/Si6UZdGxjThfFAMv0d4v6L6zN94LfyGbjujwdguzbhco1DoHCzy/x15XWbBSY8M8dvfC9yZpupeNxj+agp1W1yEoS/HF8=,iv:6ODXKT+WQNRh2MqvalLdiy9tdEiKC8hbzCPcgK1/LZQ=,tag:1pCHCGn+LU0ZkBnc0hAmMQ==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: external-dns
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: external-dns
      version: 1.12.1
      sourceRef:
        kind: HelmRepository
        name: external-dns
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    interval: 2m
    # logLevel: debug
    provider: cloudflare
    env:
      - name: CF_API_EMAIL
        valueFrom:
          secretKeyRef:
            name: external-dns-secret
            key: email
      - name: CF_API_TOKEN
        valueFrom:
          secretKeyRef:
            name: external-dns-secret
            key: api-token
    extraArgs:
      - --cloudflare-proxied
      - --annotation-filter=external-dns.alpha.kubernetes.io/target
    policy: sync
    sources: ["ingress"]
    txtPrefix: k8s.
    txtOwnerId: default
    domainFilters: ["${SECRET_DOMAIN}"]
    serviceMonitor:
      enabled: true
    podAnnotations:
      secret.reloader.stakater.com/reload: external-dns-secret
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./cloudflare-ddns/ks.yaml
  - ./external-dns/ks.yaml
  - ./ingress-nginx/ks.yaml
  - ./k8s-gateway/ks.yaml
  - ./metallb/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-k8s-gateway
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-metallb
    - name: cluster-apps-metallb-config
  path: ./kubernetes/apps/networking/k8s-gateway/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: k8s-gateway
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 10m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: k8s-gateway
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: k8s-gateway
      version: 2.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-gateway
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: k8s-gateway
    domain: "${SECRET_DOMAIN}"
    ttl: 1
    service:
      type: LoadBalancer
      port: 53
      annotations:
        metallb.universe.tf/loadBalancerIPs: "${METALLB_K8S_GATEWAY_ADDR}"
      externalTrafficPolicy: Local
---
apiVersion: v1
kind: Namespace
metadata:
  name: networking
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-metallb
  namespace: flux-system
spec:
  path: ./kubernetes/apps/networking/metallb/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: metallb
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-metallb-config
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-metallb
  path: ./kubernetes/apps/networking/metallb/config
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: metallb
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: metallb
      version: 0.13.7
      sourceRef:
        kind: HelmRepository
        name: metallb
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: true
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - resources.yaml
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: l2-ip
  namespace: networking
spec:
  ipAddressPools:
    - default-pool
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: default-pool
  namespace: networking
spec:
  addresses:
    - "${METALLB_LB_RANGE}"
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-ingress-nginx-certificates
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-cert-manager-issuers
  path: ./kubernetes/apps/networking/ingress-nginx/certificates
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-ingress-nginx
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-ingress-nginx-certificates
    - name: cluster-apps-metallb-config
  path: ./kubernetes/apps/networking/ingress-nginx/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: ingress-nginx
      namespace: networking
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: networking
resources:
  - ./helmrelease.yaml
configMapGenerator:
  - name: cloudflare-networks
    files:
      - ./cloudflare-networks.txt
generatorOptions:
  disableNameSuffixHash: true
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.4.2
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      extraEnvs:
        - name: TZ
          value: "${TIMEZONE}"
      service:
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${METALLB_INGRESS_ADDR}"
        externalTrafficPolicy: Local
      publishService:
        enabled: true
      ingressClassResource:
        default: true
      config:
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        custom-http-errors: 400,401,403,404,500,502,503,504
        enable-brotli: "true"
        forwarded-for-header: "CF-Connecting-IP"
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 10000
        proxy-body-size: "100M"
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"
        log-format-escape-json: "true"
        log-format-upstream: >-
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent"}
      metrics:
        enabled: false
      extraArgs:
        default-ssl-certificate: "networking/${SECRET_DOMAIN/./-}-production-tls"
      podAnnotations:
        configmap.reloader.stakater.com/reload: cloudflare-networks
      resources:
        requests:
          cpu: 10m
          memory: 250Mi
        limits:
          memory: 500Mi
    defaultBackend:
      enabled: true
      image:
        repository: ghcr.io/tarampampam/error-pages
        tag: 2.20.0
      extraEnvs:
        - name: TEMPLATE_NAME
          value: lost-in-space
        - name: SHOW_DETAILS
          value: "false"
  valuesFrom:
    # Cloudflare Networks
    # https://www.cloudflare.com/ips/
    - targetPath: controller.config.proxy-real-ip-cidr
      kind: ConfigMap
      name: cloudflare-networks
      valuesKey: cloudflare-networks.txt
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./certificates.yaml
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${SECRET_DOMAIN/./-}-production"
  namespace: networking
spec:
  secretName: "${SECRET_DOMAIN/./-}-production-tls"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "${SECRET_DOMAIN}"
  dnsNames:
    - "${SECRET_DOMAIN}"
    - "*.${SECRET_DOMAIN}"
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "${SECRET_DOMAIN/./-}-staging"
  namespace: networking
spec:
  secretName: "${SECRET_DOMAIN/./-}-staging-tls"
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  commonName: "${SECRET_DOMAIN}"
  dnsNames:
    - "${SECRET_DOMAIN}"
    - "*.${SECRET_DOMAIN}"
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./cert-manager/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-cert-manager
  namespace: flux-system
spec:
  path: ./kubernetes/apps/cert-manager/cert-manager/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: cert-manager
      namespace: cert-manager
  interval: 30m
  retryInterval: 1m
  timeout: 10m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-cert-manager-issuers
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-cert-manager
  path: ./kubernetes/apps/cert-manager/cert-manager/issuers
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  interval: 30m
  retryInterval: 1m
  timeout: 10m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: cert-manager
resources:
  - ./helmrelease.yaml
  - ./prometheusrule.yaml
configMapGenerator:
  - name: cert-manager-dashboard
    files:
      - cert-manager-dashboard.json=https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
generatorOptions:
  disableNameSuffixHash: true
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
  labels:
    grafana_dashboard: "true"
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: cert-manager.rules
  namespace: cert-manager
spec:
  groups:
    - name: cert-manager
      rules:
        - alert: CertManagerAbsent
          expr: |
            absent(up{job="cert-manager"})
          for: 15m
          labels:
            severity: critical
          annotations:
            description: "New certificates will not be able to be minted, and existing ones can't be renewed until cert-manager is back."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerabsent
            summary: "Cert Manager has dissapeared from Prometheus service discovery."
    - name: certificates
      rules:
        - alert: CertManagerCertExpirySoon
          expr: |
            avg by (exported_namespace, namespace, name) (
            certmanager_certificate_expiration_timestamp_seconds - time())
              < (21 * 24 * 3600)
          for: 15m
          labels:
            severity: warning
          annotations:
            description: "The domain that this cert covers will be unavailable after {{ $value | humanizeDuration }}. Clients using endpoints that this cert protects will start to fail in {{ $value | humanizeDuration }}."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertexpirysoon
            summary: "The cert {{ $labels.name }} is {{ $value | humanizeDuration }} from expiry, it should have renewed over a week ago."
        - alert: CertManagerCertNotReady
          expr: |
            max by (name, exported_namespace, namespace, condition) (
            certmanager_certificate_ready_status{condition!="True"} == 1)
          for: 15m
          labels:
            severity: critical
          annotations:
            description: "This certificate has not been ready to serve traffic for at least 10m. If the cert is being renewed or there is another valid cert, the ingress controller _may_ be able to serve that instead."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertnotready
            summary: "The cert {{ $labels.name }} is not ready to serve traffic."
        - alert: CertManagerHittingRateLimits
          expr: |
            sum by (host) (rate(certmanager_http_acme_client_request_count{status="429"}[5m]))
              > 0
          for: 15m
          labels:
            severity: critical
          annotations:
            description: "Depending on the rate limit, cert-manager may be unable to generate certificates for up to a week."
            runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerhittingratelimits
            summary: "Cert manager hitting LetsEncrypt rate limits."
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 15m
  chart:
    spec:
      chart: cert-manager
      version: v1.11.0
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    installCRDs: true
    extraArgs:
      - --dns01-recursive-nameservers=1.1.1.1:53,9.9.9.9:53
      - --dns01-recursive-nameservers-only
    podDnsPolicy: None
    podDnsConfig:
      nameservers:
        - "1.1.1.1"
        - "9.9.9.9"
    prometheus:
      enabled: true
      servicemonitor:
        enabled: true
        prometheusInstance: monitoring
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./secret.sops.yaml
  - ./issuers.yaml
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: "${SECRET_CLOUDFLARE_EMAIL}"
    privateKeySecretRef:
      name: letsencrypt-production
    solvers:
      - dns01:
          cloudflare:
            apiTokenSecretRef:
              name: cert-manager-secret
              key: api-token
        selector:
          dnsZones:
            - "${SECRET_DOMAIN}"
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: "${SECRET_CLOUDFLARE_EMAIL}"
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
      - dns01:
          cloudflare:
            apiTokenSecretRef:
              name: cert-manager-secret
              key: api-token
        selector:
          dnsZones:
            - "${SECRET_DOMAIN}"
---
apiVersion: v1
kind: Secret
metadata:
  name: cert-manager-secret
  namespace: cert-manager
stringData:
  api-token: ENC[AES256_GCM,data:h1auHGTrKNXVcxAefYZ+tKagXpO3uFEzP1pjE2OqQDpkHod5fjNsDg==,iv:aYBmjrfghuMNfeZHh3cZ5nzALE8YDi18tHQOkV8THLY=,tag:ITSqqsnGmUyCx99Q2LSiuA==,type:str]
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1ux6jahdtqlrcf3q5n0050vm2sr5qh66m388nfaamct6s643cspdqz8c40f
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAyUi9OVHcvNmxGSU5ZZ0hm
        K09IbFlMV1B4ek9yR0lwK3owUDIwN1FUdkZ3CkRRMjJXSjVVYzhHSXMyVWxnNS9Y
        dkhrT0pEcUd4UkYrdCtFTFFQQW5EQWcKLS0tIDhPRDdOeGlVbERvc1gvU0s0dlND
        U2tMaCtmbm9vRXYzaXVPeXlGanZBYkEKVDJT8oBEP15x0VVlayHxucNQTrURvuON
        zvVxyAwqBmzpIY29DEni4eZJkxtLIwPwZdYcd0Y3plxSxRF/eqpamA==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2023-02-18T21:11:36Z"
  mac: ENC[AES256_GCM,data:p7ATiVsjWczUdl/p90owteUNRtcHph4HfPpc7OYrc4AzWkVJqp7e76zN3bZSDHWtQHHWmM/Eyp1ZmJNAYA8tdgLMr5P+sQ3LD2NOudF6Sfud29rsFEtGqdf+q6F7calvU8gY8uU5KOsowlah3gOAqCdrqRs6AlDI4h7QJdVrvmc=,iv:HM/BAhojKvRc8zeAA3mYmTK9AaaTGU6lfLFdzLV0sIc=,tag:z5nzOyE3I3QVcWqy5pQ2/w==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData)$
  version: 3.7.3
---
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./echo-server/ks.yaml
  - ./hajimari/ks.yaml
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-echo-server
  namespace: flux-system
spec:
  path: ./kubernetes/apps/default/echo-server/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: echo-server
      namespace: default
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: default
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: echo-server
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      strategy: RollingUpdate
    image:
      repository: docker.io/jmalloc/echo-server
      tag: 0.3.4
    service:
      main:
        ports:
          http:
            port: &port 8080
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/icon: video-input-antenna
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    resources:
      requests:
        cpu: 5m
        memory: 10Mi
      limits:
        memory: 50Mi
---
apiVersion: v1
kind: Namespace
metadata:
  name: default
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-hajimari
  namespace: flux-system
spec:
  path: ./kubernetes/apps/default/hajimari/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: hajimari
      namespace: default
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: default
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: hajimari
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: hajimari
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: hajimari
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    hajimari:
      title: Apps
      darkTheme: espresso
      alwaysTargetBlank: true
      showGreeting: false
      showAppGroups: false
      showAppStatus: false
      showBookmarkGroups: false
      showGlobalBookmarks: false
      showAppUrls: false
      defaultEnable: true
      namespaceSelector:
        matchNames:
          - default
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hosts:
          - host: &host "hajimari.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podAnnotations:
      configmap.reloader.stakater.com/reload: hajimari-settings
    persistence:
      data:
        enabled: true
        type: emptyDir
    resources:
      requests:
        cpu: 100m
        memory: 128M
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-system-upgrade-controller
  namespace: flux-system
spec:
  path: ./kubernetes/apps/system-upgrade/system-upgrade-controller/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-system-upgrade-controller-plans
  namespace: flux-system
spec:
  dependsOn:
    - name: cluster-apps-system-upgrade-controller
  path: ./kubernetes/apps/system-upgrade/system-upgrade-controller/plans
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  wait: true
  interval: 30m
  retryInterval: 1m
  timeout: 5m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # renovate: datasource=docker image=rancher/system-upgrade-controller
  - https://github.com/rancher/system-upgrade-controller/releases/download/v0.10.0/crd.yaml
  - https://github.com/rancher/system-upgrade-controller?ref=v0.10.0
images:
  - name: rancher/system-upgrade-controller
    newTag: v0.10.0
commonLabels:
  app.kubernetes.io/name: system-upgrade-controller
  app.kubernetes.io/instance: system-upgrade-controller
patchesStrategicMerge:
  - |
    $patch: delete
    apiVersion: v1
    kind: Namespace
    metadata:
      name: system-upgrade
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: server
  namespace: system-upgrade
spec:
  # renovate: datasource=github-releases depName=k3s-io/k3s
  version: "v1.26.1+k3s1"
  serviceAccountName: system-upgrade
  concurrency: 1
  cordon: true
  nodeSelector:
    matchExpressions:
      - {key: node-role.kubernetes.io/control-plane, operator: Exists}
  upgrade:
    image: rancher/k3s-upgrade
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: agent
  namespace: system-upgrade
spec:
  # renovate: datasource=github-releases depName=k3s-io/k3s
  version: "v1.26.1+k3s1"
  serviceAccountName: system-upgrade
  concurrency: 1
  nodeSelector:
    matchExpressions:
      - {key: node-role.kubernetes.io/control-plane, operator: DoesNotExist}
  prepare:
    image: rancher/k3s-upgrade
    args: ["prepare", "server"]
  upgrade:
    image: rancher/k3s-upgrade
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./server.yaml
  - ./agent.yaml
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  # - ./system-upgrade-controller/ks.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: system-upgrade
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-reloader
  namespace: flux-system
spec:
  path: ./kubernetes/apps/kube-system/reloader/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: reloader
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: reloader
  namespace: &namespace kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: reloader
      version: v1.0.5
      sourceRef:
        kind: HelmRepository
        name: stakater
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: reloader
    reloader:
      reloadStrategy: annotations
      podMonitor:
        enabled: true
        namespace: *namespace
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-local-path-provisioner
  namespace: flux-system
  labels:
    substitution.flux.home.arpa/disabled: "true"
spec:
  path: ./kubernetes/apps/kube-system/local-path-provisioner/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: local-path-provisioner
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: local-path-provisioner
  namespace: kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: ./deploy/chart/local-path-provisioner
      sourceRef:
        kind: GitRepository
        name: local-path-provisioner
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    helperImage:
      repository: public.ecr.aws/docker/library/busybox
      tag: latest
    storageClass:
      defaultClass: false
    nodePathMap:
      - node: DEFAULT_PATH_FOR_NON_LISTED_NODES
        paths: ["/var/lib/rancher/k3s/storage"]
    # Note: Do not enable Flux variable substitution on this HelmRelease
    configmap:
      setup: |-
        #!/bin/sh
        while getopts "m:s:p:" opt
        do
            case $opt in
                p)
                absolutePath=$OPTARG
                ;;
                s)
                sizeInBytes=$OPTARG
                ;;
                m)
                volMode=$OPTARG
                ;;
            esac
        done
        mkdir -m 0777 -p ${absolutePath}
        chmod 701 ${absolutePath}/..
      teardown: |-
        #!/bin/sh
        while getopts "m:s:p:" opt
        do
            case $opt in
                p)
                absolutePath=$OPTARG
                ;;
                s)
                sizeInBytes=$OPTARG
                ;;
                m)
                volMode=$OPTARG
                ;;
            esac
        done
        rm -rf ${absolutePath}
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-metrics-server
  namespace: flux-system
spec:
  path: ./kubernetes/apps/kube-system/metrics-server/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: metrics-server
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: metrics-server
  namespace: kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: metrics-server
      version: 3.8.3
      sourceRef:
        kind: HelmRepository
        name: metrics-server
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    args:
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
    metrics:
      enabled: true
    serviceMonitor:
      enabled: true
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./kube-vip/ks.yaml
  - ./local-path-provisioner/ks.yaml
  - ./metrics-server/ks.yaml
  - ./reloader/ks.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-system
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-kube-vip
  namespace: flux-system
spec:
  path: ./kubernetes/apps/kube-system/kube-vip/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: apps/v1
      kind: DaemonSet
      name: kube-vip
      namespace: kube-system
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-vip
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: kube-vip
    app.kubernetes.io/name: kube-vip
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kube-vip
      app.kubernetes.io/name: kube-vip
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kube-vip
        app.kubernetes.io/name: kube-vip
    spec:
      containers:
        - name: kube-vip
          image: ghcr.io/kube-vip/kube-vip:v0.5.9
          imagePullPolicy: IfNotPresent
          args: ["manager"]
          env:
            - name: vip_arp
              value: "true"
            - name: port
              value: "6443"
            - name: vip_cidr
              value: "32"
            - name: cp_enable
              value: "true"
            - name: cp_namespace
              value: kube-system
            - name: svc_enable
              value: "false"
            - name: vip_leaderelection
              value: "true"
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            - name: address
              value: "${KUBE_VIP_ADDR}"
          securityContext:
            capabilities:
              add: ["NET_ADMIN", "NET_RAW"]
      hostAliases:
        - hostnames:
            - kubernetes
          ip: 127.0.0.1
      hostNetwork: true
      serviceAccountName: kube-vip
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - ./rbac.yaml
  - ./daemonset.yaml
labels:
  - pairs:
      kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-vip
  namespace: kube-system
secrets:
  - name: kube-vip
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: kube-vip
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: kube-vip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:kube-vip-role
rules:
  - apiGroups: [""]
    resources: ["services", "services/status", "nodes"]
    verbs: ["list", "get", "watch", "update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["list", "get", "watch", "update", "create"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:kube-vip-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-vip-role
subjects:
  - kind: ServiceAccount
    name: kube-vip
    namespace: kube-system
---
apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
kind: Kustomization
metadata:
  name: cluster-apps-kubernetes-dashboard
  namespace: flux-system
spec:
  path: ./kubernetes/apps/monitoring/kubernetes-dashboard/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: home-kubernetes
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2beta1
      kind: HelmRelease
      name: kubernetes-dashboard
      namespace: monitoring
  interval: 30m
  retryInterval: 1m
  timeout: 3m
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: monitoring
resources:
  - ./rbac.yaml
  - ./helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kubernetes-dashboard
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kubernetes-dashboard
      version: 6.0.0
      sourceRef:
        kind: HelmRepository
        name: kubernetes-dashboard
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    env:
      TZ: "${TIMEZONE}"
    extraArgs:
      - --enable-skip-login
      - --disable-settings-authorizer
      - --enable-insecure-login
      - --token-ttl=43200
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-staging
        hajimari.io/icon: mdi:kubernetes
      hosts:
        - &host "kubernetes.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: kubernetes-dashboard-tls
    metricsScraper:
      enabled: true
    serviceMonitor:
      enabled: false
---

# For dashboard sign in token:
# kubectl -n monitoring get secret kubernetes-dashboard -o jsonpath='{.data.token}' | base64 -d
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-dashboard
  namespace: monitoring
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: kubernetes-dashboard
    meta.helm.sh/release-namespace: monitoring
secrets:
  - name: kubernetes-dashboard
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: kubernetes-dashboard
  namespace: monitoring
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: kubernetes-dashboard
    meta.helm.sh/release-namespace: monitoring
    kubernetes.io/service-account.name: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: monitoring
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ./namespace.yaml
  - ./kubernetes-dashboard/ks.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.50.7
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
    timeout: 15m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-initdb:14.7
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    rbac:
      pspEnabled: false
    tolerations:
      - key: "arm"
        operator: "Exists"
    deploymentStrategy:
      type: Recreate
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      # GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
    GF_SERVER_ROOT_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
    # VAR_BLOCKY_URL: "http://blocky.default.svc.cluster.local:4000"
    envFromSecrets:
      - name: grafana-secret
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
      hosts: [grafana.eviljungle.com]
      tls:
        - hosts:
            - grafana.eviljungle.com
    plugins:
      - pr0ps-trackmap-panel
      - natel-plotly-panel
      - vonage-status-panel
      - grafana-piechart-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - grafana-clock-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'teslamate'
            orgId: 1
            folder: Teslamate
            type: file
            disableDeletion: false
            # updateIntervalSeconds: -1
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/teslamate
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11074-node-exporter-for-prometheus-dashboard-en-v20201010/
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        blocky:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.20/docs/blocky-grafana.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342-ceph-pools/
        ceph-pools:
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336-ceph-osd-single/
        ceph-osd:
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842-ceph-cluster/
        ceph-cluster:
          gnetId: 2842
          revision: 16
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Loki
        frigate:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/frigate.json
          datasource: Prometheus
        home-assistant:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
          datasource: home_assistant
        loki:
          gnetId: 13407
          revision: 1
          datasource: Prometheus
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 29
          datasource: Prometheus
        opnsense:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/opnsense.json
          datasource: Prometheus
        prometheus-exporter-summary:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
          datasource: Prometheus
        speedtest-exporter:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/speedtest-exporter.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/12921-truenas/
        TrueNAS:
          url: https://grafana.com/api/dashboards/12921/revisions/1/download
          datasource: TrueNAS
        # # Ref: https://grafana.com/grafana/dashboards/11315
        # unifi-client-insights:
        #   gnetId: 11315
        #   revision: 9
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11311
        # unifi-network-sites:
        #   gnetId: 11311
        #   revision: 5
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11314
        # unifi-uap-insights:
        #   gnetId: 11314
        #   revision: 10
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11312
        # unifi-usw-insights:
        #   gnetId: 11312
        #   revision: 9
        #   datasource: Prometheus
        ups:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/ups.json
          datasource: Prometheus
        uptimerobot:
          url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
          datasource: Prometheus
        windows-node:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/windows_node.json
          datasource: Prometheus
      teslamate:
        charge-level:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/charge-level.json
          # datasource: TeslaMate
        charges:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/charges.json
          # datasource: TeslaMate
        charging-stats:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/charging-stats.json
          # datasource: TeslaMate
        drive-stats:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/drive-stats.json
          # datasource: TeslaMate
        drives:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/drives.json
          # datasource: TeslaMate
        efficiency:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/efficiency.json
          # datasource: TeslaMate
        locations:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/locations.json
          # datasource: TeslaMate
        mileage:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/mileage.json
          # datasource: TeslaMate
        overview:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/overview.json
          # datasource: TeslaMate
        projected-range:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/projected-range.json
          # datasource: TeslaMate
        states:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/states.json
          # datasource: TeslaMate
        statistics:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/statistics.json
          # datasource: TeslaMate
        timeline:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/timeline.json
          # datasource: TeslaMate
        trip:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/trip.json
          # datasource: TeslaMate
        updates:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/updates.json
          datasource: TeslaMate
        vampire-drain:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/vampire-drain.json
          # datasource: TeslaMate
        visited:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/visited.json
          # datasource: TeslaMate
        charge-details:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/internal/charge-details.json
        drive-details:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/master/grafana/dashboards/internal/drive-details.json
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.logs.svc.cluster.local:80
          - name: influxdb
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: telegraf
          - name: comcast
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: comcast
          - name: home_assistant
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: home_assistant
          - name: speedtests
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: speedtests
          - name: uptimerobot
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: uptimerobot
          - name: TeslaMate
            type: postgres
            access: proxy
            url: postgres-v15-rw.default.svc.cluster.local:5432
            database: teslamate
            user: teslamate
            secureJsonData:
              password: "$TESLAMATE_DB_PASSWORD"
            jsonData:
              postgresVersion: 1000
              sslmode: disable
          - name: TrueNAS
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: graphitedb
    grafana.ini:
      auth:
        oauth_skip_org_role_update_sync: false
      auth.basic:
        disable_login_form: true
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        team_ids:
        allowed_organizations:
        name: Auth0
        client_id: # Set by env vars
        client_secret: # Set by env vars
        scopes: openid profile email
        auth_url: https://billimek.auth0.com/authorize
        token_url: https://billimek.auth0.com/oauth/token
        api_url: https://billimek.auth0.com/userinfo
      # ref: https://blog.dahanne.net/2020/04/15/integrating-auth0-oidc-oauth-2-with-authorization-groups-and-roles/
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains("https://billimek.com/groups"[*], 'Admin') && 'Admin' || contains("https://billimek.com/groups"[*], 'Editor') && 'Editor' || 'Viewer'
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
cloudflare_email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
cloudflare_api_token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
cloudflare_domain: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
---
cloudflare_email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
cloudflare_api_token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
cloudflare_domain: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
---
cloudflare_email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
cloudflare_api_token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
cloudflare_domain: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
---
cloudflare_email: "${BOOTSTRAP_CLOUDFLARE_EMAIL}"
cloudflare_api_token: "${BOOTSTRAP_CLOUDFLARE_API_TOKEN}"
cloudflare_domain: "${BOOTSTRAP_CLOUDFLARE_DOMAIN}"
