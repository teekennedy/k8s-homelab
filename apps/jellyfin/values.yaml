# yaml-language-server: $schema= https://raw.githubusercontent.com/bjw-s/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
app-template:
  defaultPodOptions:
    automountServiceAccountToken: false
  controllers:
    main:
      replicas: 0
      containers:
        jellyfin:
          image:
            repository: docker.io/jellyfin/jellyfin
            tag: 10.10.6
          env:
            TZ: America/Denver
            PUID: '1200'
            PGID: "1200"
        # https://docs.linuxserver.io/images/docker-prowlarr/
        prowlarr:
          image:
            repository: lscr.io/linuxserver/prowlarr
            tag: 1.30.2.4939-ls105
          env:
            TZ: America/Denver
        # https://docs.linuxserver.io/images/docker-radarr/
        radarr:
          image:
            repository: lscr.io/linuxserver/radarr
            tag: 5.18.4.9674-ls260
          env:
            TZ: America/Denver
            PUID: "1200"
            PGID: "1200"
        # https://docs.linuxserver.io/images/docker-sonarr/
        sonarr:
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: 4.0.13.2932-ls271
          env:
            TZ: America/Denver
            PUID: "1200"
            PGID: "1200"
        jellyseerr:
          image:
            repository: docker.io/fallenbagel/jellyseerr
            tag: 2.3.0
          env:
            TZ: America/Denver
            PUID: "1200"
            PGID: "1200"
    downloader:
      replicas: 0
      pod:
        dnsPolicy: "None"
        dnsConfig:
          nameservers:
            - 127.0.0.1
      containers:
        # https://docs.linuxserver.io/images/docker-qbittorrent/
        qbittorrent:
          image:
            repository: lscr.io/linuxserver/qbittorrent
            tag: 5.0.3-r0-ls380
          env:
            TZ: America/Denver
            PUID: "1200"
            PGID: "1200"
        gluetun:
          image:
            repository: docker.io/qmcgaw/gluetun
            tag: v3.40.0
          env:
            TZ: America/Denver
            PUID: "1200"
            PGID: "1200"
            VPN_SERVICE_PROVIDER: protonvpn
            # create secret with kubectl -n jellyfin create secret generic gluetun --from-literal=WIREGUARD_PRIVATE_KEY=$(pbpaste)
            # Wireguard not working with port forwarding for now
            # https://github.com/qdm12/gluetun/issues/2528
            # VPN_TYPE: wireguard
            # WIREGUARD_PRIVATE_KEY:
            #   valueFrom:
            #     secretKeyRef:
            #       name: gluetun
            #       key: WIREGUARD_PRIVATE_KEY
            OPENVPN_USER:
              valueFrom:
                secretKeyRef:
                  name: gluetun
                  key: OPENVPN_USER
            OPENVPN_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: gluetun
                  key: OPENVPN_PASSWORD
            VPN_PORT_FORWARDING: "on"
            PORT_FORWARD_ONLY: "on"
            # https://github.com/qdm12/gluetun-wiki/blob/main/setup/options/dns.md
            # DNS_KEEP_NAMESERVER: "on"
            SERVER_COUNTRIES: United States
            VPN_PORT_FORWARDING_UP_COMMAND: /bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{`{{PORTS}}`}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1'
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
  service:
    main:
      controller: main
      ports:
        http:
          port: 8096
          protocol: HTTP
        prowlarr:
          port: 9696
          protocol: HTTP
        radarr:
          port: 7878
          protocol: HTTP
        sonarr:
          port: 8989
          protocol: HTTP
        jellyseerr:
          port: 5055
          protocol: HTTP
    downloader:
      controller: downloader
      ports:
        qbittorrent:
          port: 8080
          protocol: HTTP
  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &jellyfinHost jellyfin.msng.to
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
        - host: &qbittorrentHost qbittorrent.msng.to
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: downloader
                port: qbittorrent
        - host: &prowlarrHost prowlarr.msng.to
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: prowlarr
        - host: &radarrHost radarr.msng.to
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: radarr
        - host: &sonarrHost sonarr.msng.to
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: sonarr
        - host: &jellyseerrHost jellyseerr.msng.to
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: jellyseerr
      tls:
        - secretName: jellyfin-tls-certificate
          hosts:
            - *jellyfinHost
            - *qbittorrentHost
            - *prowlarrHost
            - *radarrHost
            - *sonarrHost
            - *jellyseerrHost
  persistence:
    data:
      accessMode: ReadWriteMany
      type: persistentVolumeClaim
      size: 50Ti
      storageClass: smb
      advancedMounts:
        main:
          jellyfin:
            - path: /media/movies
              subPath: movies
            - path: /media/shows
              subPath: shows
          radarr:
            - path: /downloads/complete
              subPath: qbittorrent/downloads/complete
            - path: /movies
              subPath: movies
          sonarr:
            - path: /downloads/complete
              subPath: qbittorrent/downloads/complete
            - path: /shows
              subPath: shows
        downloader:
          qbittorrent:
            - path: /downloads
              subPath: qbittorrent/downloads
    config:
      accessMode: ReadWriteOnce
      type: persistentVolumeClaim
      size: 20Gi
      advancedMounts:
        main:
          jellyfin:
            - path: /config
              subPath: jellyfin/config
          prowlarr:
            - path: /config
              subPath: prowlarr/config
          radarr:
            - path: /config
              subPath: radarr/config
          sonarr:
            - path: /config
              subPath: sonarr/config
          jellyseerr:
            - path: /app/config
              subPath: jellyseerr/config
        downloader:
          qbittorrent:
            - path: /config
              subPath: qbittorrent/config
